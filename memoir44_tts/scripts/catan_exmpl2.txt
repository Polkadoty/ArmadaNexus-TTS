----#include Catan/Scripts/ControlPanel-Page1
m_COrientation = { --for border corner
    ['SW'] = {0.0,30.0,0.0},
    ['E'] = {0.0,-90.0,0.0},
    ['NE'] = {0.0,-150.0,0.0},
    ['W'] = {0.0,90.0,0.0},
    ['SE'] = {0.0,-30.0,0.0},
    ['NW'] = {0.0,150.0,0.0},
}
m_BOrientation = { --for border pieces
    ['N'] = {0.0,180.0,0.0},
    ['S'] = {0.0,0.0,0.0},
    ['NE'] = {0.0,-120.0,0.0},
    ['E'] = {0.0,-90.0,0.0},
    ['SW'] = {0.0,60.0,0.0},
    ['W'] = {0.0,90.0,0.0},
    ['NW'] = {0.0,120.0,0.0},
    ['SE'] = {0.0,-60.0,0.0},
}
m_HOrientation = { --for harbor pieces
    ['SW'] = {0.0,-150.0,0.0},
    ['NE'] = {0.0,30.0,0.0},
    ['E'] = {0.0,90.0,0.0},
    ['W'] = {0.0,-90.0,0.0},
    ['SE'] = {0.0,150.0,0.0},
    ['NW'] = {0.0,-30.0,0.0},
}

m_ScenarioDef = {
--[[Base game]]
    ['B'] =  {  sID = 'B',
                sInfoText = '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[u]Game end[/u]\n[sub]The game ends when a player reaches &VP& victory points on his turn.[/sub]',
                iVPTarget = 10, iVPadjCK = 3 },
--[[Base game 2 players]]
    ['B2'] = {  sID = 'B2',
                sInfoText = '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[u]Friendly Robber[/u] (optional)\n[sub]The robber may only be used against a player who has more than 2 victory points. When a 7 is rolled you still lose half your resource cards if you have more than 7.[/sub]\n\n[u]Game end[/u]\n[sub]The game ends when a player reaches &VP& victory points on his turn.[/sub]',
                iVPTarget = 10, iVPadjCK = 3 },
--[[Seafarers Scenario 1]]
    ['S1'] = {  sID = 'S1',
                sInfoText = '\n\n\n\n\n\n\n'
                .. '[b]Scenario 1: Heading for New Shores[/b]\n[u]Game start[/u]\n[sub]Place two settlements as in basic Catan. Both settlements must be on the main island. If your settlement is on the coast, you may place a ship instead of a road.[/sub]'
                .. '\n[sub]\n[/sub][u]Special rules[/u]\n[sub]You get 2 VP for your first settlement on [b]each[/b] of the "foreign" islands - place one of your Catan Chits underneath your settlement when you build it. It does not matter if another player has already build a settlement in that area.[/sub]'
                .. '\n[sub]\n[/sub][u]Game end[/u]\n[sub]The game ends when a player reaches &VP& victory points on his turn.[/sub]',
                sCatanChitDesc = 'Place this chit under your first settlement on a new island.\n           2 Victory Points!',
                iVPTarget = 14, iVPadjCK = 2,
                fCatanChitScoreMap = 2.0, fCatanChitScoreHand = 0.0 },
--[[Seafarers Scenario 2]]
    ['S2'] = {  sID = 'S2',
                sInfoText = '\n\n\n\n\n\n\n\n\n'
                .. '[b]Scenario 2: The Four/Six Islands[/b]\n[u]Game start[/u]\n[sub]Place two settlements as in basic Catan. They may also be on different islands. If your settlement is on the coast, you may place a ship instead of a road.[/sub]'
                .. '\n[sub]\n[/sub][u]Special rules[/u]\n[sub]You get 2 VP for your first settlement on [b]each[/b] "foreign" island (an island you did not start on). Place one of your Catan Chits under your settlement when you build it.[/sub]'
                .. '\n[sub]\n[/sub][u]Game end[/u]\n[sub]The game ends when a player reaches &VP& victory points on his turn.[/sub]',
                sCatanChitDesc = 'Place this chit under your first settlement on a new island.\n           2 Victory Points!',
                iVPTarget = 13, iVPadjCK = 2,
                fCatanChitScoreMap = 2.0, fCatanChitScoreHand = 0.0, },
--[[Seafarers Scenario 3]]
    ['S3'] = {  sID = 'S3', sInfoText = '\n\n\n\n\n\n\n'
                .. '[b]Scenario 3: The Fog Islands[/b]\n[u]Game start[/u]\n[sub]Place two settlements as in basic Catan. They may also be on different islands. If your settlement is on the coast, you may place a ship instead of a road.[/sub]'
                .. '\n[sub]\n[/sub][u]Special rules[/u]\n[sub]When you place a ship on a tile that connects to the intersection of an unexplored hex, you have to flip the hex. If it is a land tile, take a number token from the stack and place it on the hex. You also receive of card of the discovered resource.[/sub]'
                .. '\n[sub]\n[/sub][u]Game end[/u]\n[sub]The game ends when a player reaches &VP& victory points on his turn.[/sub]',
                iVPTarget = 12, iVPadjCK = 2, },
--[[Seafarers Scenario 4]]
    ['S4'] = {  sID = 'S4',
                sInfoText = '\n\n\n\n'
                .. '[b]Scenario 4: Through the Desert[/b]\n[sub]The main land mass in the West is considered the main island. The smaller islands and the area beyond the desert are "foreign".\n\n[/sub][u]Game start[/u]\n[sub]Place two settlements as in basic Catan. Both settlements must be on the main island. If your settlement is on the coast, you may place a ship instead of a road.[/sub]'
                .. '\n[sub]\n[/sub][u]Special rules[/u]\n[sub]You get 2 VP for your first settlement on [b]each[/b] of the "foreign" areas - place one of your Catan Chits under your settlement when you build it. It does not matter if another player already has a settlement in that area.[/sub]'
                .. '\n[sub]\n[/sub][u]Game end[/u]\n[sub]The game ends when a player reaches &VP& victory points on his turn.[/sub]',
                sCatanChitDesc = 'Place this chit under your first settlement on a new island - the area beyond the great desert also counts as an island.\n2 Victory Points!',
                iVPTarget = 14, iVPadjCK = 2,
                fCatanChitScoreMap = 2.0, fCatanChitScoreHand = 0.0, },
}

-- Button IDs:
m_BtnIDs = {}

function onLoad()
    local iIndex = 0
    -- Create buttons on the control panel
    local button_parameters = {}
    button_parameters.function_owner = self
    button_parameters.rotation = {0.0, 180.0, 0.0}

    button_parameters.click_function = 'onBtnRandom'
    if Global.call('getStateRandomize') then
        button_parameters.label = 'YES'
    else
        button_parameters.label = 'NO'
    end
    button_parameters.position = {-2.11, 0.1, 11.3}
    button_parameters.width = 1000
    button_parameters.height = 640
    button_parameters.font_size = 480
    self.createButton( button_parameters )
    m_BtnIDs['btnRandom'] = iIndex

    --Cities and Knights
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnCK'
    if Global.call('getBtnStateCK') then
        button_parameters.label = 'YES'
    else
        button_parameters.label = 'NO'
    end
    button_parameters.position = {-2.11, 0.1, 8.73}
    button_parameters.width = 1000
    button_parameters.height = 640
    button_parameters.font_size = 480
    self.createButton( button_parameters )
    m_BtnIDs['btnCK'] = iIndex

    --Cities and Knights - Automatic Barbarian Ship
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnCKAutoShip'
    if Global.call('getBtnStateCKAutoShip') then
        button_parameters.label = 'YES'
    else
        button_parameters.label = 'NO'
    end
    button_parameters.position = {-2.11, 0.1, 7.40}
    button_parameters.width = 1000
    button_parameters.height = 640
    button_parameters.font_size = 480
    self.createButton( button_parameters )
    m_BtnIDs['btnCKAutoShip'] = iIndex

-- Scenarios
    button_parameters.width = 480
    button_parameters.height = 480
    button_parameters.font_size = 250
    button_parameters.label = ''

    -- Base game - 2 Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnBase_2'
    --button_parameters.label = 'B'
    button_parameters.position = {-0.84, 0.1, 4.32}
    self.createButton( button_parameters )
    m_BtnIDs['btnBase_2'] = iIndex
    -- Base game - 3-4 Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnBase_3'
    --button_parameters.label = 'B'
    --button_parameters.position = {-1.14, 0.1, 4.32}
    button_parameters.position = {-2.105, 0.1, 4.32}
    self.createButton( button_parameters )
    m_BtnIDs['btnBase_3'] = iIndex

    -- Base game - 5-6 Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnBase_5'
    --button_parameters.label = 'B5'
    --button_parameters.position = {-3.09, 0.1, 4.32}
    button_parameters.position = {-3.37, 0.1, 4.32}
    self.createButton( button_parameters )
    m_BtnIDs['btnBase_5'] = iIndex

-- Seafarers scenario 1
    --3 Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnSF1_3'
    button_parameters.position = {-0.84, 0.1, -0.3}
    --button_parameters.label = 'S13'
    self.createButton( button_parameters )
    m_BtnIDs['btnSF1_3'] = iIndex
    --4 Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnSF1_4'
    --button_parameters.label = 'S14'
    button_parameters.position = {-2.105, 0.1, -0.3}
    self.createButton( button_parameters )
    m_BtnIDs['btnSF1_4'] = iIndex
    --5-6Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnSF1_5'
    --button_parameters.label = 'S15'
    button_parameters.position = {-3.37, 0.1, -0.3}
    self.createButton( button_parameters )
    m_BtnIDs['btnSF1_5'] = iIndex

-- Seafarers scenario 2
    -- 3 Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnSF2_3'
    button_parameters.position = {-0.84, 0.1, -3.66}
    --button_parameters.label = 'S23'
    self.createButton( button_parameters )
    m_BtnIDs['btnSF2_3'] = iIndex
    -- 4 Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnSF2_4'
    --button_parameters.label = 'S24'
    button_parameters.position = {-2.105, 0.1, -3.66}
    self.createButton( button_parameters )
    m_BtnIDs['btnSF2_4'] = iIndex
    -- 5-6 Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnSF2_5'
    --button_parameters.label = 'S25'
    button_parameters.position = {-3.37, 0.1, -3.66}
    self.createButton( button_parameters )
    m_BtnIDs['btnSF2_5'] = iIndex

-- Seafarers scenario 3
    -- 3 Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnSF3_3'
    --button_parameters.label = 'S33'
    button_parameters.position = {-0.84, 0.1, -7.07}
    self.createButton( button_parameters )
    m_BtnIDs['btnSF3_3'] = iIndex
    -- 4 Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnSF3_4'
    --button_parameters.label = 'S34'
    button_parameters.position = {-2.105, 0.1, -7.07}
    self.createButton( button_parameters )
    m_BtnIDs['btnSF3_4'] = iIndex
    -- 5-6 Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnSF3_5'
    --button_parameters.label = 'S35'
    button_parameters.position = {-3.37, 0.1, -7.07}
    self.createButton( button_parameters )
    m_BtnIDs['btnSF3_5'] = iIndex
-- Seafarers scenario 4
    -- 3 Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnSF4_3'
    button_parameters.position = {-0.84, 0.1, -10.65}
    self.createButton( button_parameters )
    m_BtnIDs['btnSF4_3'] = iIndex
    -- 4 Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnSF4_4'
    --button_parameters.label = 'S44'
    button_parameters.position = {-2.105, 0.1, -10.65}
    self.createButton( button_parameters )
    m_BtnIDs['btnSF4_4'] = iIndex
    -- 5-6 Players
    iIndex = iIndex + 1
    button_parameters.click_function = 'onBtnSF4_5'
    --button_parameters.label = 'S45'
    button_parameters.position = {-3.37, 0.1, -10.65}
    self.createButton( button_parameters )
    m_BtnIDs['btnSF4_5'] = iIndex
end

--Remove the quick start overlay when the page is switched
function onDestroy()
    local Obj = getObjectFromGUID('6905af')
    if Obj ~= nil then
        if Obj.getVar('m_bLoaded') then
            Obj.destruct()
        end
    end
end

function onBtnRandom(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    if Global.call('getStateRandomize') then
        Global.call('setStateRandomize', {bRandom = false})
        self.editButton( { index = m_BtnIDs['btnRandom'], label = 'NO' } )
    else
        Global.call('setStateRandomize', {bRandom = true})
        self.editButton( { index = m_BtnIDs['btnRandom'], label = 'YES' } )
    end
end

function onBtnCK(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    if Global.call('getBtnStateCK') then
        Global.call('setBtnStateCK', {bEnable = false})
        self.editButton({index=m_BtnIDs['btnCK'], label = 'NO'})
    else
        Global.call('setBtnStateCK', {bEnable = true})
        self.editButton({index = m_BtnIDs['btnCK'], label = 'YES'})
    end
end
function onBtnCKAutoShip(Object, sPlayer)
    if Global.call('getBtnStateCKAutoShip') then
        Global.call('setBtnStateCKAutoShip', {bEnable = false})
        self.editButton({index = m_BtnIDs['btnCKAutoShip'], label = 'NO'})
    else
        Global.call('setBtnStateCKAutoShip', {bEnable = true})
        self.editButton({index = m_BtnIDs['btnCKAutoShip'], label = 'YES'})
    end
end
function onBtnBase_2(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    if Global.call('getStateRivers') or Global.call('getStateCaravans') or Global.call('getStateBarbarianAttack') or Global.call('getStateTraders') or Global.call('getStateOilsprings') then
        startLuaCoroutine(self, 'loadBaseGame') --load 4 player layout when incompatible expansions are selected
    else
        startLuaCoroutine(self, 'loadBaseGame_2P')
    end
end
function onBtnBase_3(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    if Global.call('getStateRandomize') == false and Global.call('getBtnStateCK') == true
    and Global.call('getStateRivers') == false and Global.call('getStateCaravans') == false and Global.call('getStateBarbarianAttack') == false and Global.call('getStateTraders') == false and Global.call('getStateOilsprings') == false then
        --load recommended beginners map for Cities and Knights
        startLuaCoroutine(self, 'loadCKBaseGame')
    else
        startLuaCoroutine(self, 'loadBaseGame')
    end
end
function onBtnBase_5(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    if Global.call('getStateTraders') == true then  --Traders & Barbarian campain uses a larger layout
        startLuaCoroutine(self, 'loadTradersAndBarb_BaseGame5_6P')
    else
        startLuaCoroutine(self, 'loadBaseGame5_6P')
    end
end
function onBtnSF1_3(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    if Global.call('getStateBarbarianAttack') == true then --load the 4 players layout, there is too many coastal hexes in the 3p layout
        startLuaCoroutine(self, 'loadSFScenario1_4P')
    else
        startLuaCoroutine(self, 'loadSFScenario1_3P')
    end
end
function onBtnSF1_4(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    startLuaCoroutine(self, 'loadSFScenario1_4P')
end
function onBtnSF1_5(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    startLuaCoroutine(self, 'loadSFScenario1_5_6P')
end
function onBtnSF2_3(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    startLuaCoroutine(self, 'loadSFScenario2_3P')
end
function onBtnSF2_4(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    startLuaCoroutine(self, 'loadSFScenario2_4P')
end
function onBtnSF2_5(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    startLuaCoroutine(self, 'loadSFScenario2_5_6P')
end
function onBtnSF3_3(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    startLuaCoroutine(self, 'loadSFScenario3_3P')
end
function onBtnSF3_4(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    startLuaCoroutine(self, 'loadSFScenario3_4P')
end
function onBtnSF3_5(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    startLuaCoroutine(self, 'loadSFScenario3_5_6P')
end
function onBtnSF4_3(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    startLuaCoroutine(self, 'loadSFScenario4_3P')
end
function onBtnSF4_4(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    startLuaCoroutine(self, 'loadSFScenario4_4P')
end
function onBtnSF4_5(Object, sPlayer)
    if Global.call('checkButtonPrivileges', {sColor = sPlayer}) == false then     return      end
    startLuaCoroutine(self, 'loadSFScenario4_5_6P')
end

function randomizeTable(Table)
    for i = #Table, 2, -1 do
        local iRnd = math.random(i)
        Table[i], Table[iRnd] = Table[iRnd], Table[i]
    end
    return Table
end

--****************************************************
--*           Map / Scenario definitions             *
--****************************************************

--[[ Base game - 2 players ]]--
function loadBaseGame_2P(bRandom)
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['B2'], vMapScale = {18.0, 2.5, 18.0} })
    startLuaCoroutine(Global, 'setupDecks')

    --randomize harbors because not all are used
    local HarborTypes = {'lumber', 'bricks', 'wool', 'grain', 'ore', 'generic', 'generic', 'generic', 'generic'}
    for i = #HarborTypes, 2, -1 do
        local iRnd = math.random(i)
        HarborTypes[i], HarborTypes[iRnd] = HarborTypes[iRnd], HarborTypes[i]
    end

    local fXOff = 1.5
    local TileInfo = {
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = true, iNumToken = 2, iNumTokenSec = 12  },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = true, iNumToken = 3 },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = true, iNumToken = 4 },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 5 },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 6 },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = true, iNumToken = 8 },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = true, iNumToken = 9 },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = true, iNumToken = 10 },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'fields', bRandHex = true, iNumToken = 11 },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 5 },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 9 },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'mountain', bRandHex = true, iNumToken = 4 },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = true, iNumToken = 10 },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'hills', bRandHex = true, iNumToken = 11  },
        --Ocean tiles
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false, sHarborType = HarborTypes[5], bRandHarbor = false, vHarborRot = m_HOrientation['SW'] },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false   },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_COrientation['W'], bRandHex = false, sHarborType = HarborTypes[2], bRandHarbor = false, vHarborRot = m_HOrientation['W'] },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false    },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false, sHarborType = HarborTypes[4], bRandHarbor = false, vHarborRot = m_HOrientation['NW'] },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false   },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false    },
        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false, sHarborType = HarborTypes[3], bRandHarbor = false, vHarborRot = m_HOrientation['NE'] },
        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false    },
        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false  },
        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_COrientation['E'], bRandHex = false, sHarborType = HarborTypes[1], bRandHarbor = false, vHarborRot = m_HOrientation['E'] },
        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false   },
        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false, sHarborType = HarborTypes[6], bRandHarbor = false, vHarborRot = m_HOrientation['SE'] },
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false   },
    }

    if Global.call('getStateFishermen') == true then
        TileInfo[4].vFishRot = m_BOrientation['S']
        TileInfo[14].vFishRot = m_BOrientation['SW']
        TileInfo[45].vFishRot = m_BOrientation['NW']
        TileInfo[61].vFishRot = m_BOrientation['N']
        TileInfo[51].vFishRot = m_BOrientation['NE']
        TileInfo[20].vFishRot = m_BOrientation['SE']
    end

    Global.call('placeRobber', {vPos = {x=TileInfo[24].pos.x,y=1.5,z=TileInfo[24].pos.z}})

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = false, iNumChits = 0 })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[35].pos.x+1.89})
    end
    return true
end --[[ Base game - 2 players ]]--

--[[ Base game - 3-4 players ]]--
function loadBaseGame(bRandom)
    local bRandom = Global.call('getStateRandomize')
    if Global.call('getStateTraders') then
        bRandom = true
    end
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['B'], vMapScale = {21.0, 2.5, 18.0} })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 0.0
    local TileInfo = {
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 6  },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 3 },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 8 },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 2 },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 4 },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 5 },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 10 },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 5 },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 9 },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'desert', bRandHex = bRandom, bRobberPos = true    },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 6 },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 9 },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 10 },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 11    },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 3 },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 12 },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 8 },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 4  },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 11 },
        --Ocean tiles
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE']   },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false   },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW']    },
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false   },
        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false    },
        [15] = { pos = {x = fXOff + 6.96, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW']    },
        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false, sHarborType = 'ore', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E']    },
        [25] = { pos = {x = fXOff + 8.7, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false   },
        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_COrientation['E'], bRandHex = false   },
        [36] = { pos = {x = fXOff + 10.44, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_COrientation['W'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W']    },
        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'grain', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E']    },
        [46] = { pos = {x = fXOff + 8.7, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false    },
        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false    },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false, sHarborType = 'bricks', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW']  },
        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE']    },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false    },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false, sHarborType = 'lumber', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW']    },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false   },
    }

    if Global.call('getStateFishermen') == true then
        TileInfo[33].sHexType = 'lake'
        TileInfo[33].bRobberPos = nil

        TileInfo[4].vFishRot = m_BOrientation['S']
        TileInfo[11].vFishRot = m_BOrientation['SE']
        TileInfo[25].vFishRot = m_BOrientation['SW']
        TileInfo[46].vFishRot = m_BOrientation['NW']
        TileInfo[51].vFishRot = m_BOrientation['NE']
        TileInfo[61].vFishRot = m_BOrientation['N']

        Global.call('placeRobber', {vPos = {x=TileInfo[30].pos.x,y=1.5,z=TileInfo[30].pos.z}})
    end

    if Global.call('getStateRivers') == true then
        TileInfo[52].sHexType = TileInfo[24].sHexType   --move forest because we build the river instead
        TileInfo[24].sHexType = 'river_mountain'        TileInfo[24].bRandHex = false    TileInfo[24].bRandNum = bRandom     TileInfo[24].vRot = {0.0,150.0,0.0}

        TileInfo[54].sHexType = TileInfo[23].sHexType
        TileInfo[23].sHexType = 'river_hills'           TileInfo[23].bRandHex = false    TileInfo[23].bRandNum = bRandom     TileInfo[23].vRot = {0.0,150.0,0.0}

        TileInfo[13].sHexType = TileInfo[22].sHexType
        TileInfo[22].sHexType = 'river_pasture'         TileInfo[22].bRandHex = false    TileInfo[22].bRandNum = bRandom     TileInfo[22].vRot = {0.0,150.0,0.0}

        TileInfo[33].sHexType = TileInfo[21].sHexType
        TileInfo[33].iNumToken, TileInfo[21].iNumToken = TileInfo[21].iNumToken, TileInfo[33].iNumToken
        TileInfo[33].iNumTokenSec = 12 --the hex with the 2 gets the number 12 token as well
        TileInfo[33].bRobberPos, TileInfo[21].bRobberPos = TileInfo[21].bRobberPos, TileInfo[33].bRobberPos
        TileInfo[21].sHexType = 'river_swamp_l'         TileInfo[21].bRandHex = false    TileInfo[21].vRot = {0.0,150.0,0.0}

        TileInfo[34].sHexType = TileInfo[44].sHexType
        TileInfo[44].sHexType = 'river_mountain'         TileInfo[44].bRandHex = false    TileInfo[44].bRandNum = bRandom     TileInfo[44].vRot = {0.0,150.0,0.0}

        TileInfo[32].sHexType = TileInfo[43].sHexType
        TileInfo[43].sHexType = 'river_hills'         TileInfo[43].bRandHex = false    TileInfo[43].bRandNum = bRandom     TileInfo[43].vRot = {0.0,150.0,0.0}

        TileInfo[14].sHeyType = TileInfo[42].sHexType
        TileInfo[45].iNumToken = 10 --hex with number 12 gets a new token, the 12 is put on the same field as the 2
        TileInfo[42].sHexType = 'river_swamp_r'         TileInfo[42].bRandHex = false    TileInfo[42].vRot = {0.0,150.0,0.0}     TileInfo[42].iNumToken = nil

        TileInfo[14].sHexType = 'fields' --remove 1 pasture from the game
    end

    if Global.call('getStateCaravans') == true then
        TileInfo[33].sHexType = 'oasis'
        TileInfo[33].bRandHex = false
        TileInfo[33].iNumToken = nil

        TileInfo[33].bRobberPos = nil
        Global.call('placeRobber', {vPos = {x=TileInfo[30].pos.x,y=1.5,z=TileInfo[30].pos.z}})
    end

    if Global.call('getStateTraders') == true then
        --define trading goods tiles
        TileInfo[54].sHexType = 'glassworks4p'  TileInfo[54].iNumToken = nil    TileInfo[54].vRot = {0.0,150.0,0.0}     TileInfo[54].bRandHex = false
        TileInfo[31].sHexType = 'castle4p'      TileInfo[31].iNumToken = nil    TileInfo[31].vRot = {0.0,270.0,0.0}     TileInfo[31].bRandHex = false
        TileInfo[14].sHexType = 'quarry4p'      TileInfo[14].iNumToken = nil    TileInfo[14].vRot = {0.0,30.0,0.0}      TileInfo[14].bRandHex = false

        TileInfo[33].sHexType = 'forest'        TileInfo[33].iNumToken = 5      TileInfo[33].bRobberPos = nil
        TileInfo[35].sHexType = 'hills'
        TileInfo[32].iNumToken = 8
        TileInfo[21].iNumToken = 9
        TileInfo[45].iNumToken = 11

        --Spawn the goods tokens
        local Tokens = { ['glassworks4p'] = {sFront = 'glass_factory', Backs={'glass','glass','glass','glass','glass','glass','tools','tools','tools','tools','tools','tools'}},
                         ['quarry4p'] = {sFront = 'quarry', Backs={'sand','sand','sand','sand','sand','sand','marble','marble','marble','marble','marble','marble'}},
                         ['castle4p'] = {sFront = 'castle', Backs={'sand','sand','sand','sand','sand','sand','tools','tools','tools','tools','tools','tools'}} }
        --randomize the tables
        randomizeTable(Tokens['glassworks4p'].Backs)
        randomizeTable(Tokens['quarry4p'].Backs)
        randomizeTable(Tokens['castle4p'].Backs)

        --spawn token stack1
        local vPos = {TileInfo[63].pos.x-0.5,1.2,TileInfo[63].pos.z+0.9}
        local StackInfo = Tokens[TileInfo[54].sHexType]
        for i = 1, #StackInfo.Backs do
            Global.call('spawnGoodsToken', {vPos = vPos, sFront = StackInfo.sFront, sBack = StackInfo.Backs[i], vRot = m_HOrientation['NW']})
            vPos[2] = vPos[2] + 0.09
        end
        --stack 2
        vPos = {TileInfo[6].pos.x-0.5,1.2,TileInfo[6].pos.z-0.9}
        local StackInfo = Tokens[TileInfo[14].sHexType]
        for i = 1, #StackInfo.Backs do
            Global.call('spawnGoodsToken', {vPos = vPos, sFront = StackInfo.sFront, sBack = StackInfo.Backs[i], vRot = m_HOrientation['SW']})
            vPos[2] = vPos[2] + 0.09
        end
        --stack 3
        vPos = {TileInfo[30].pos.x+1.0,1.2,TileInfo[30].pos.z}
        local StackInfo = Tokens[TileInfo[31].sHexType]
        for i = 1, #StackInfo.Backs do
            Global.call('spawnGoodsToken', {vPos = vPos, sFront = StackInfo.sFront, sBack = StackInfo.Backs[i], vRot = m_HOrientation['E']})
            vPos[2] = vPos[2] + 0.09
        end

        --spawn barbarian figurines on the map
        local Barbarian = Global.call('spawnTABBarbarian', {vPos = {TileInfo[13].pos.x+0.75,1.5,TileInfo[13].pos.z-1.5}, vRot = {0.0,0.0,0.0}})
        Barbarian.setLuaScript('function onLoad() self.setVar(\'sObjType\', \'traders\') end')
        Barbarian.setColorTint({0.15, 0.15, 0.15})
        local Barbarian = Global.call('spawnTABBarbarian', {vPos = {TileInfo[32].pos.x-0.75,1.5,TileInfo[32].pos.z-1.5}, vRot = {0.0,0.0,0.0}})
        Barbarian.setLuaScript('function onLoad() self.setVar(\'sObjType\', \'traders\') end')
        Barbarian.setColorTint({0.15, 0.15, 0.15})
        local Barbarian = Global.call('spawnTABBarbarian', {vPos = {TileInfo[45].pos.x-1.75,1.5,TileInfo[45].pos.z}, vRot = {0.0,0.0,0.0}})
        Barbarian.setLuaScript('function onLoad() self.setVar(\'sObjType\', \'traders\') end')
        Barbarian.setColorTint({0.15, 0.15, 0.15})
    end

    if Global.call('getStateBarbarianAttack') == true then
        TileInfo[12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = true, bRandNum = bRandom, iNumToken = 3, iGroup = 1 }
        TileInfo[13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = true, bRandNum = bRandom, iNumToken = 8, iGroup = 1 }
        TileInfo[14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'desert', bRandHex = false, bRobberPos = true }
        TileInfo[21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = true, bRandNum = bRandom, iNumToken = 9, iGroup = 1 }
        TileInfo[22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = true, bRandNum = bRandom, iNumToken = 4, iGroup = 2 }
        TileInfo[23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = true, bRandNum = bRandom, iNumToken = 5, iGroup = 2 }
        TileInfo[24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = true, bRandNum = bRandom, iNumToken = 10, iGroup = 1 }
        TileInfo[31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = true, bRandNum = bRandom, iNumToken = 12, iGroup = 1 }
        TileInfo[32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = true, bRandNum = bRandom, iNumToken = 6, iGroup = 2 }
        TileInfo[33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = true, bRandNum = bRandom, iNumToken = 10, iGroup = 2 }
        TileInfo[34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = true, bRandNum = bRandom, iNumToken = 8, iGroup = 2 }
        TileInfo[35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = true, bRandNum = bRandom, iNumToken = 11, iGroup = 1 }
        TileInfo[42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'pasture', bRandHex = true, bRandNum = bRandom, iNumToken = 4, iGroup = 1 }
        TileInfo[43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = true, bRandNum = bRandom, iNumToken = 9, iGroup = 2}
        TileInfo[44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = true, bRandNum = bRandom, iNumToken = 3, iGroup = 2 }
        TileInfo[45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'mountain', bRandHex = true, bRandNum = bRandom, iNumToken = 5, iGroup = 1 }
        TileInfo[52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'castle', bRandHex = false }
        TileInfo[53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = true, bRandNum = bRandom, iNumToken = 6, iGroup = 1 }
        TileInfo[54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = true, bRandNum = bRandom, iNumToken = 2, iGroup = 1 }
    end

    if Global.call('getStateOilsprings') == true then
        TileInfo[33].sHexType = 'forest'    TileInfo[33].bRobberPos = nil   TileInfo[33].iNumToken = 3
        TileInfo[44].sHexType = 'oilsource' TileInfo[44].bRandHex = false   TileInfo[44].iNumToken = 9
        TileInfo[31].sHexType = 'oilsource' TileInfo[31].bRandHex = false
        TileInfo[24].sHexType = 'oilsource' TileInfo[24].bRandHex = false
        TileInfo[53].sHexType = 'forest'

        Global.call('placeRobber', {vPos = {x=TileInfo[30].pos.x,y=1.5,z=TileInfo[30].pos.z}})
    end

    --randomize the layout while keeping the numbers in order (variable layout according to official rules)
    if bRandom == false
       and Global.call('getStateOilsprings') == false and Global.call('getStateBarbarianAttack') == false and Global.call('getStateTraders') == false
       and Global.call('getStateCaravans') == false and Global.call('getStateRivers') == false and Global.call('getStateFishermen') == false then
        --Collect resource tiles to randomize
        local RandomHexes = {}
        for i, Def in pairs(TileInfo) do
            if Def.sHexType ~= 'border' and Def.sHexType ~= 'corner' then
                table.insert(RandomHexes, i)
            end
        end
        --randomize
        for i = #RandomHexes, 2, -1 do
            local iRnd = math.random(i)
            TileInfo[RandomHexes[i]].sHexType, TileInfo[RandomHexes[iRnd]].sHexType = TileInfo[RandomHexes[iRnd]].sHexType, TileInfo[RandomHexes[i]].sHexType
            TileInfo[RandomHexes[i]].bRobberPos, TileInfo[RandomHexes[iRnd]].bRobberPos = TileInfo[RandomHexes[iRnd]].bRobberPos, TileInfo[RandomHexes[i]].bRobberPos
        end

        --distribute the numbers in fixed order on all hexes (skipping the desert)
        local TileOrder = {31, 21, 12, 13, 14, 24, 35, 45, 54, 53, 52, 42, 32, 22, 23, 34, 44, 43, 33}
        local NumTokens = {5, 2, 6, 3, 8, 10, 9, 12, 11, 4, 8, 10, 9, 4, 5, 6, 3, 11}
        local idxToken = 1
        for i = 1, #TileOrder do
            if TileInfo[TileOrder[i]].sHexType ~= 'desert' then
                TileInfo[TileOrder[i]].iNumToken = NumTokens[idxToken]
                idxToken = idxToken + 1
            else
                TileInfo[TileOrder[i]].iNumToken = nil
            end
        end
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = false, iNumChits = 0 })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[36].pos.x+1.89})
    end
    return true
end --[[ Base game - 3-4 players ]]--

--[[ Cities & Knights beginners map - 3-4 players ]]--
function loadCKBaseGame()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['B'], vMapScale = {21.0, 2.5, 18.0} })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 0.0
    local TileInfo = {
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 3 },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 2 },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 5 },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 8 },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 4 },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 6 },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 10 },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 3 },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 9 },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'desert', bRandHex = bRandom, bRobberPos = true },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 11 },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 9 },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 10 },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 5 },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 4 },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 8 },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 12 },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 6 },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 11 },
        --Ocean tiles
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false, sHarborType = 'ore', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE'] },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false, sHarborType = 'grain', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE'] },
        [15] = { pos = {x = fXOff + 6.96, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [25] = { pos = {x = fXOff + 8.7, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W'] },
        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['E'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [36] = { pos = {x = fXOff + 10.44, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['W'], bRandHex = false },
        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [46] = { pos = {x = fXOff + 8.7, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W'] },
        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'lumber', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false, sHarborType = 'bricks', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
    }

    if Global.call('getStateFishermen') == true then
        TileInfo[33].sHexType = 'lake'
        TileInfo[33].bRobberPos = nil

        TileInfo[5].vFishRot = m_BOrientation['S']
        TileInfo[15].vFishRot = m_BOrientation['SW']
        TileInfo[20].vFishRot = m_BOrientation['SE']
        TileInfo[41].vFishRot = m_BOrientation['NE']
        TileInfo[55].vFishRot = m_BOrientation['NW']
        TileInfo[62].vFishRot = m_BOrientation['N']

        Global.call('placeRobber', {vPos = {x=TileInfo[36].pos.x,y=1.5,z=TileInfo[36].pos.z}})
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = false, iNumChits = 0 })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[36].pos.x+1.89})
    end
    return true
end --[[ Cities & Knights beginners map - 3-4 players]]--

--[[ Base game - 5-6 players ]]--
function loadBaseGame5_6P()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['B'], vMapScale = {23.0, 2.5, 23.0}, bExtension = true })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 1.5
    local TileInfo = {
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'mountain', bRandHex = true, iNumToken = 3  },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'mountain', bRandHex = true, iNumToken = 4 },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'mountain', bRandHex = true, iNumToken = 3 },

        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'mountain', bRandHex = true, iNumToken = 3 },
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = true, iNumToken = 5 },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'fields', bRandHex = true, iNumToken = 10 },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'mountain', bRandHex = true, iNumToken = 4 },

        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = true, iNumToken = 4 },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = true, iNumToken = 5 },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'desert', bRandHex = true, bRobberPos = true },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = true, iNumToken = 5 },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = true, iNumToken = 6 },

        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'forest', bRandHex = true, iNumToken = 6 },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = true, iNumToken = 6 },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = true, iNumToken = 8 },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = true, iNumToken = 8 },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = true, iNumToken = 8 },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = true, iNumToken = 9 },

        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 9 },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 9 },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'desert', bRandHex = true },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 10 },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'pasture', bRandHex = true, iNumToken = 10 },

        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = true, iNumToken = 11 },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = true, iNumToken = 11 },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = true, iNumToken = 11 },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = true, iNumToken = 12 },

        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'pasture', bRandHex = true, iNumToken = 12 },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = true, iNumToken = 2 },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = true, iNumToken = 2 },
        -- Ocean tiles
        [2] = { pos = {x = fXOff + -8.7, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [10] = { pos = {x = fXOff + -10.44, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [15] = { pos = {x = fXOff + 6.96, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [19] = { pos = {x = fXOff + -12.18, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false, sHarborType = 'ore', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [25] = { pos = {x = fXOff + 8.7, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [29] = { pos = {x = fXOff + -13.92, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_COrientation['E'], bRandHex = false },
        [36] = { pos = {x = fXOff + 10.44, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_COrientation['W'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W'] },
        [40] = { pos = {x = fXOff + -12.18, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [46] = { pos = {x = fXOff + 8.7, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [50] = { pos = {x = fXOff + -10.44, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'grain', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false, sHarborType = 'bricks', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [59] = { pos = {x = fXOff + -8.7, y = 0.97, z = -9.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W'] },
        [68] = { pos = {x = fXOff + -6.96, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE'] },
        [69] = { pos = {x = fXOff + -3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false,  },
        [70] = { pos = {x = fXOff + 0.0, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [71] = { pos = {x = fXOff + 3.48, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false,  },
        [85] = { pos = {x = fXOff + 3.48, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false,  },
        [86] = { pos = {x = fXOff + 0.0, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false, sHarborType = 'lumber', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [87] = { pos = {x = fXOff + -3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false,  },
        [88] = { pos = {x = fXOff + -6.96, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE']},
    }

    if Global.call('getStateFishermen') == true then
        TileInfo[22].sHexType = 'lake'
        TileInfo[22].bRobberPos = nil
        TileInfo[43].sHexType = 'lake'
        TileInfo[43].bSecLake = true

        TileInfo[69].vFishRot = m_BOrientation['S']
        TileInfo[2].vFishRot = m_BOrientation['SE']
        TileInfo[10].vFishRot = m_BOrientation['SE']
        TileInfo[15].vFishRot = m_BOrientation['SW']
        TileInfo[25].vFishRot = m_BOrientation['SW']
        TileInfo[46].vFishRot = m_BOrientation['NW']
        TileInfo[59].vFishRot = m_BOrientation['NE']
        TileInfo[87].vFishRot = m_BOrientation['N']

        Global.call('placeRobber', {vPos = {x=TileInfo[29].pos.x,y=1.5,z=TileInfo[29].pos.z}})
    end

    if Global.call('getStateRivers') == true then
        TileInfo[32].sHexType = 'river_mountain'        TileInfo[32].bRandHex = false    TileInfo[32].bRandNum = true     TileInfo[32].vRot = {0.0,150.0,0.0}
        TileInfo[31].sHexType = 'river_ext_pasture1'    TileInfo[31].bRandHex = false    TileInfo[31].bRandNum = true     TileInfo[31].vRot = {0.0,150.0,0.0}
        TileInfo[30].sHexType = 'river_ext_pasture2'    TileInfo[30].bRandHex = false    TileInfo[30].bRandNum = true     TileInfo[30].vRot = {0.0,150.0,0.0}

        TileInfo[34].sHexType = 'river_mountain'        TileInfo[34].bRandHex = false    TileInfo[34].bRandNum = true     TileInfo[34].vRot = {0.0,210.0,0.0}
        TileInfo[23].sHexType = 'river_hills'           TileInfo[23].bRandHex = false    TileInfo[23].bRandNum = true     TileInfo[23].vRot = {0.0,210.0,0.0}
        TileInfo[13].sHexType = 'river_pasture'         TileInfo[13].bRandHex = false    TileInfo[13].bRandNum = true     TileInfo[13].vRot = {0.0,210.0,0.0}
        TileInfo[4].sHexType = 'river_swamp_l'          TileInfo[4].bRandHex = false     TileInfo[4].vRot = {0.0,210.0,0.0}
        TileInfo[4].iNumToken = nil                     TileInfo[4].bRobberPos = true

        TileInfo[44].sHexType = 'river_mountain'        TileInfo[44].bRandHex = false    TileInfo[44].bRandNum = true     TileInfo[44].vRot = {0.0,90.0,0.0}
        TileInfo[53].sHexType = 'river_hills'           TileInfo[53].bRandHex = false    TileInfo[53].bRandNum = true     TileInfo[53].vRot = {0.0,90.0,0.0}
        TileInfo[61].sHexType = 'river_swamp_r'         TileInfo[61].bRandHex = false    TileInfo[61].vRot = {0.0,90.0,0.0}
        TileInfo[61].iNumToken = nil

        TileInfo[22].sHexType = 'hills'                 TileInfo[22].iNumToken = 4       TileInfo[22].bRobberPos = nil
        TileInfo[43].sHexType = 'forest'                TileInfo[43].iNumToken = 2
        TileInfo[3].sHexType = 'forest'
        TileInfo[5].sHexType = 'fields'
        TileInfo[51].sHexType = 'fields'
        TileInfo[52].sHexType = 'fields'

        --rotate harbors away from river ends
        TileInfo[70].vHarborRot = m_HOrientation['SE']
        TileInfo[40].vHarborRot = m_HOrientation['E']
        TileInfo[86].vHarborRot = m_HOrientation['NE']
    end

    if Global.call('getStateCaravans') == true then
        TileInfo[21].sHexType, TileInfo[22].sHexType = TileInfo[22].sHexType, TileInfo[21].sHexType
        TileInfo[21].iNumToken, TileInfo[22].iNumToken = TileInfo[22].iNumToken, TileInfo[21].iNumToken
        TileInfo[44].sHexType, TileInfo[43].sHexType = TileInfo[43].sHexType, TileInfo[44].sHexType
        TileInfo[44].iNumToken, TileInfo[43].iNumToken = TileInfo[43].iNumToken, TileInfo[44].iNumToken
        TileInfo[21].sHexType = 'oasis'     TileInfo[21].bRandHex = false
        TileInfo[44].sHexType = 'oasis'     TileInfo[44].bRandHex = false

        TileInfo[22].bRobberPos = nil
        Global.call('placeRobber', {vPos = {x=TileInfo[29].pos.x,y=1.5,z=TileInfo[29].pos.z}})
    end

    if Global.call('getStateBarbarianAttack') == true then
        TileInfo[3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = true, iNumToken = 11, bRandNum = bRandom, iGroup = 1  }
        TileInfo[4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = true, iNumToken = 5, bRandNum = bRandom, iGroup = 1 }
        TileInfo[5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = true, iNumToken = 2, bRandNum = bRandom, iGroup = 1 }
        TileInfo[11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'hills', bRandHex = true, iNumToken = 10, bRandNum = bRandom, iGroup = 1 }
        TileInfo[12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = true, iNumToken = 9, bRandNum = bRandom, iGroup = 2 }
        TileInfo[13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = true, iNumToken = 4, bRandNum = bRandom, iGroup = 2 }
        TileInfo[14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'hills', bRandHex = true, iNumToken = 6, bRandNum = bRandom, iGroup = 1 }
        TileInfo[20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 9, bRandNum = bRandom, iGroup = 1 }
        TileInfo[21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 11, bRandNum = bRandom, iGroup = 2 }
        TileInfo[22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 8, bRandNum = bRandom, iGroup = 2 }
        TileInfo[23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = true, iNumToken = 3, bRandNum = bRandom, iGroup = 2 }
        TileInfo[24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'desert', bRandHex = false, iGroup = 1 }
        TileInfo[30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'castle', bRandHex = false }
        TileInfo[31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = true, iNumToken = 6, bRandNum = bRandom, iGroup = 2 }
        TileInfo[32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = true, iNumToken = 4, bRandNum = bRandom, iGroup = 2 }
        TileInfo[33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = true, iNumToken = 10, bRandNum = bRandom, iGroup = 2 }
        TileInfo[34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = true, iNumToken = 8, bRandNum = bRandom, iGroup = 2 }
        TileInfo[35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'castle', bRandHex = false }
        TileInfo[41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'desert', bRandHex = false }
        TileInfo[42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'mountain', bRandHex = true, iNumToken = 3, bRandNum = bRandom, iGroup = 2 }
        TileInfo[43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 6, bRandNum = bRandom, iGroup = 2 }
        TileInfo[44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 11, bRandNum = bRandom, iGroup = 2 }
        TileInfo[45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'pasture', bRandHex = true, iNumToken = 5, bRandNum = bRandom, iGroup = 1 }
        TileInfo[51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = true, iNumToken = 8, bRandNum = bRandom, iGroup = 1 }
        TileInfo[52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = true, iNumToken = 10, bRandNum = bRandom, iGroup = 2 }
        TileInfo[53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = true, iNumToken = 5, bRandNum = bRandom, iGroup = 2 }
        TileInfo[54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = true, iNumToken = 4, bRandNum = bRandom, iGroup = 1 }
        TileInfo[60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'mountain', bRandHex = true, iNumToken = 3, bRandNum = bRandom, iGroup = 1 }
        TileInfo[61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = true, iNumToken = 9, bRandNum = bRandom, iGroup = 1 }
        TileInfo[62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = true, iNumToken = 12, bRandNum = bRandom, iGroup = 1 }
    end

    if Global.call('getStateOilsprings') == true then
        TileInfo[22].sHexType = 'oilsource' TileInfo[22].bRandHex = false   TileInfo[22].iNumToken = 9  TileInfo[22].bRobberPos = nil
        TileInfo[61].sHexType = 'oilsource' TileInfo[61].bRandHex = false   TileInfo[61].iNumToken = 5
        TileInfo[24].sHexType = 'oilsource' TileInfo[24].bRandHex = false   TileInfo[24].iNumToken = 4
        TileInfo[31].sHexType = 'oilsource' TileInfo[31].bRandHex = false   TileInfo[31].iNumToken = 10

        TileInfo[45].sHexType = 'hills'     TileInfo[45].iNumToken = 6
        TileInfo[43].sHexType = 'fields'    TileInfo[43].iNumToken = 2
        TileInfo[14].iNumToken = 6

        Global.call('placeRobber', {vPos = {x=TileInfo[29].pos.x,y=1.5,z=TileInfo[29].pos.z}})
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = false, iNumChits = 0 })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[36].pos.x+1.89})
    end
    return true
end --[[ Base game - 5-6 players ]]--

--[[ Traders & Barbarians base game - 5-6 players ]]--
function loadTradersAndBarb_BaseGame5_6P()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['B'], vMapScale = {26.0, 2.5, 23.0}, bExtension = true })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 0.0
    local TileInfo = {
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'quarry6p', bRandHex = false, vRot = {0.0,30.0,0.0}  },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = true, iNumToken = 6, bRandNum = bRandom },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = true, iNumToken = 11, bRandNum = bRandom },
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'glassworks6p', bRandHex = false },

        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = true, iNumToken = 10, bRandNum = bRandom },
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = true, iNumToken = 2, bRandNum = bRandom },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = true, iNumToken = 9, bRandNum = bRandom },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = true, iNumToken = 8, bRandNum = bRandom },
        [15] = { pos = {x = fXOff + 6.96, y = 0.965, z = 6.02}, sHexType = 'hills', bRandHex = true, iNumToken = 3, bRandNum = bRandom },

        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 8, bRandNum = bRandom },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 11, bRandNum = bRandom },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 4, bRandNum = bRandom },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 12, bRandNum = bRandom },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 5, bRandNum = bRandom },
        [25] = { pos = {x = fXOff + 8.7, y = 0.965, z = 3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 4, bRandNum = bRandom },

        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'glassworks4p', bRandHex = false, vRot = {0.0,270.0,0.0} },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'desert', bRandHex = false },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'fields', bRandHex = true, iNumToken = 9, bRandNum = bRandom },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'castle6p', bRandHex = false },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'fields', bRandHex = true, iNumToken = 10, bRandNum = bRandom },
        [35] = { pos = {x = fXOff + 6.96, y = 0.965, z = 0.0}, sHexType = 'desert', bRandHex = false },
        [36] = { pos = {x = fXOff + 10.44, y = 0.965, z = 0.0}, sHexType = 'quarry4p', bRandHex = false, vRot = {0.0,90.0,0.0} },

        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 4, bRandNum = bRandom },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 5, bRandNum = bRandom },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'pasture', bRandHex = true, iNumToken = 2, bRandNum = bRandom },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'pasture', bRandHex = true, iNumToken = 5, bRandNum = bRandom },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'pasture', bRandHex = true, iNumToken = 3, bRandNum = bRandom },
        [46] = { pos = {x = fXOff + 8.7, y = 0.965, z = -3.01}, sHexType = 'pasture', bRandHex = true, iNumToken = 6, bRandNum = bRandom },

        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = true, iNumToken = 3, bRandNum = bRandom },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = true, iNumToken = 6, bRandNum = bRandom },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = true, iNumToken = 9, bRandNum = bRandom },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = true, iNumToken = 12, bRandNum = bRandom },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = true, iNumToken = 10, bRandNum = bRandom },

        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'quarry6p', bRandHex = false },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'mountain', bRandHex = true, iNumToken = 11, bRandNum = bRandom },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'mountain', bRandHex = true, iNumToken = 8, bRandNum = bRandom },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'glassworks6p', bRandHex = false },
        -- Ocean tiles
        [2] = { pos = {x = fXOff + -8.7, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [10] = { pos = {x = fXOff + -10.44, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [19] = { pos = {x = fXOff + -12.18, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false, sHarborType = 'lumber', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [29] = { pos = {x = fXOff + -13.92, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_COrientation['E'], bRandHex = false },
        [40] = { pos = {x = fXOff + -12.18, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [50] = { pos = {x = fXOff + -10.44, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'bricks', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [59] = { pos = {x = fXOff + -8.7, y = 0.97, z = -9.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [84] = { pos = {x = fXOff + 6.96, y = 0.965, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW']},
        [85] = { pos = {x = fXOff + 3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false,  },
        [86] = { pos = {x = fXOff + 0.0, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [87] = { pos = {x = fXOff + -3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false  },
        [88] = { pos = {x = fXOff + -6.96, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE']},
        [68] = { pos = {x = fXOff + -6.96, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false },
        [69] = { pos = {x = fXOff + -3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE'] },
        [70] = { pos = {x = fXOff + 0.0, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [71] = { pos = {x = fXOff + 3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false  },
        [72] = { pos = {x = fXOff + 6.96, y = 0.965, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [7] = { pos = {x = fXOff + 8.7, y = 0.965, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [16] = { pos = {x = fXOff + 10.44, y = 0.965, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false, sHarborType = 'grain', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W']},
        [26] = { pos = {x = fXOff + 12.18, y = 0.965, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW']},
        [37] = { pos = {x = fXOff + 13.92, y = 0.965, z = 0.0}, sHexType = 'corner', vRot = m_COrientation['W'], bRandHex = false },
        [47] = { pos = {x = fXOff + 12.18, y = 0.965, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false, sHarborType = 'ore', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W']},
        [56] = { pos = {x = fXOff + 10.44, y = 0.965, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [64] = { pos = {x = fXOff + 8.7, y = 0.965, z = -9.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
    }

    if Global.call('getStateFishermen') == true then
        TileInfo[31].sHexType = 'lake'
        TileInfo[35].sHexType = 'lake'
        TileInfo[35].bSecLake = true

        TileInfo[70].vFishRot = m_BOrientation['S']
        TileInfo[7].vFishRot = m_BOrientation['SW']
        TileInfo[56].vFishRot = m_BOrientation['NW']
        TileInfo[87].vFishRot = m_BOrientation['N']
        TileInfo[40].vFishRot = m_BOrientation['NE']
        TileInfo[10].vFishRot = m_BOrientation['SE']
    end

    --Spawn the goods tokens
    local Tokens = { ['glassworks'] = {sFront = 'glass_factory', Backs={'glass','glass','glass','glass','glass','glass','glass','glass','glass','tools','tools','tools','tools','tools','tools','tools','tools','tools'}},
                     ['quarry'] = {sFront = 'quarry', Backs={'sand','sand','sand','sand','sand','sand','sand','sand','sand','marble','marble','marble','marble','marble','marble','marble','marble','marble'}},
                     ['castle'] = {sFront = 'castle', Backs={'sand','sand','sand','sand','sand','sand','sand','sand','sand','tools','tools','tools','tools','tools','tools','tools','tools','tools'}} }
    --randomize the tables
    randomizeTable(Tokens['glassworks'].Backs)
    randomizeTable(Tokens['quarry'].Backs)
    randomizeTable(Tokens['castle'].Backs)

    --spawn glassworks stacks
    --stack 1
    local vPos = {TileInfo[29].pos.x+1.0,1.2,TileInfo[29].pos.z}
    local iStart = #Tokens['glassworks'].Backs
    for i = iStart, iStart-5, -1 do
        Global.call('spawnGoodsToken', {vPos = vPos, sFront = 'glass_factory', sBack = Tokens['glassworks'].Backs[i], vRot = m_HOrientation['E']})
        vPos[2] = vPos[2] + 0.09
        Tokens['glassworks'].Backs[i] = nil
    end
    --stack2
    vPos = {TileInfo[85].pos.x+0.5,1.2,TileInfo[85].pos.z+0.9}
    iStart = #Tokens['glassworks'].Backs
    for i = iStart, iStart-5, -1 do
        Global.call('spawnGoodsToken', {vPos = vPos, sFront = 'glass_factory', sBack = Tokens['glassworks'].Backs[i], vRot = m_HOrientation['NE']})
        vPos[2] = vPos[2] + 0.09
        Tokens['glassworks'].Backs[i] = nil
    end
    --stack3
    vPos = {TileInfo[71].pos.x+0.5,1.2,TileInfo[71].pos.z-0.9}
    iStart = #Tokens['glassworks'].Backs
    for i = iStart, iStart-5, -1 do
        Global.call('spawnGoodsToken', {vPos = vPos, sFront = 'glass_factory', sBack = Tokens['glassworks'].Backs[i], vRot = m_HOrientation['SE']})
        vPos[2] = vPos[2] + 0.09
        Tokens['glassworks'].Backs[i] = nil
    end

    --spawn quarry stacks
    --stack 1
    vPos = {TileInfo[37].pos.x-1.0,1.2,TileInfo[37].pos.z}
    iStart = #Tokens['quarry'].Backs
    for i = iStart, iStart-5, -1 do
        Global.call('spawnGoodsToken', {vPos = vPos, sFront = 'quarry', sBack = Tokens['quarry'].Backs[i], vRot = m_HOrientation['W']})
        vPos[2] = vPos[2] + 0.09
        Tokens['quarry'].Backs[i] = nil
    end
    --stack2
    vPos = {TileInfo[59].pos.x+1.0,1.2,TileInfo[59].pos.z}
    iStart = #Tokens['quarry'].Backs
    for i = iStart, iStart-5, -1 do
        Global.call('spawnGoodsToken', {vPos = vPos, sFront = 'quarry', sBack = Tokens['quarry'].Backs[i], vRot = m_HOrientation['E']})
        vPos[2] = vPos[2] + 0.09
        Tokens['quarry'].Backs[i] = nil
    end
    --stack3
    vPos = {TileInfo[68].pos.x+0.5,1.2,TileInfo[68].pos.z-0.9}
    iStart = #Tokens['quarry'].Backs
    for i = iStart, iStart-5, -1 do
        Global.call('spawnGoodsToken', {vPos = vPos, sFront = 'quarry', sBack = Tokens['quarry'].Backs[i], vRot = m_HOrientation['SE']})
        vPos[2] = vPos[2] + 0.09
        Tokens['quarry'].Backs[i] = nil
    end

    --spawn castle stacks next to the map
    --stack 1
    vPos = {TileInfo[47].pos.x+4.0,1.2,TileInfo[47].pos.z+1.2}
    iStart = #Tokens['castle'].Backs
    for i = iStart, iStart-5, -1 do
        Global.call('spawnGoodsToken', {vPos = vPos, sFront = 'castle', sBack = Tokens['castle'].Backs[i], vRot = m_HOrientation['W']})
        vPos[2] = vPos[2] + 0.09
        Tokens['castle'].Backs[i] = nil
    end
    --stack 2
    vPos = {TileInfo[47].pos.x+4.0,1.2,TileInfo[47].pos.z}
    iStart = #Tokens['castle'].Backs
    for i = iStart, iStart-5, -1 do
        Global.call('spawnGoodsToken', {vPos = vPos, sFront = 'castle', sBack = Tokens['castle'].Backs[i], vRot = m_HOrientation['W']})
        vPos[2] = vPos[2] + 0.09
        Tokens['castle'].Backs[i] = nil
    end
    --stack 3
    vPos = {TileInfo[47].pos.x+4.0,1.2,TileInfo[47].pos.z-1.2}
    iStart = #Tokens['castle'].Backs
    for i = iStart, iStart-5, -1 do
        Global.call('spawnGoodsToken', {vPos = vPos, sFront = 'castle', sBack = Tokens['castle'].Backs[i], vRot = m_HOrientation['W']})
        vPos[2] = vPos[2] + 0.09
        Tokens['castle'].Backs[i] = nil
    end

    --spawn barbarian figurines on the map
    local Barbarian = Global.call('spawnTABBarbarian', {vPos = {TileInfo[31].pos.x-0.75,1.5,TileInfo[31].pos.z-1.5}, vRot = {0.0,0.0,0.0}})
    Barbarian.setLuaScript('function onLoad() self.setVar(\'sObjType\', \'traders\') end')
    Barbarian.setColorTint({0.15, 0.15, 0.15})
    local Barbarian = Global.call('spawnTABBarbarian', {vPos = {TileInfo[5].pos.x+0.75,1.5,TileInfo[5].pos.z-1.5}, vRot = {0.0,0.0,0.0}})
    Barbarian.setLuaScript('function onLoad() self.setVar(\'sObjType\', \'traders\') end')
    Barbarian.setColorTint({0.15, 0.15, 0.15})
    local Barbarian = Global.call('spawnTABBarbarian', {vPos = {TileInfo[55].pos.x-1.75,1.5,TileInfo[55].pos.z}, vRot = {0.0,0.0,0.0}})
    Barbarian.setLuaScript('function onLoad() self.setVar(\'sObjType\', \'traders\') end')
    Barbarian.setColorTint({0.15, 0.15, 0.15})

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = false, iNumChits = 0 })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[37].pos.x+1.89})
    end
    return true
end --[[ Traders & Barbarians base game - 5-6 players ]]--


--[[ Seafarers - Scenario 1 - 3 players ]]--
function loadSFScenario1_3P()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['S1'], vMapScale = {23.0, 2.5, 24.0} })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 0.0
    local TileInfo = {
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 12, iGroup = 2 },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'gold', bRandHex = bRandom, iNumToken = 5, iGroup = 2 },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2},
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 4, iGroup = 2 },
        [15] = { pos = {x = fXOff + 6.96, y = 0.97, z = 6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 9, iGroup = 2 },
        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'grain', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 4, iGroup = 1 },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 6, iGroup = 1 },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W'] },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 3, iGroup = 2 },
        [25] = { pos = {x = fXOff + 8.7, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'ore', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE'] },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 2, iGroup = 1 },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 5, iGroup = 1 },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 10, iGroup = 1 },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'gold', bRandHex = bRandom, iNumToken = 4, iGroup = 2 },
        [36] = { pos = {x = fXOff + 10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 8, iGroup = 1 },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 10, iGroup = 1 },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 9, iGroup = 1 },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 8, iGroup = 1 },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [46] = { pos = {x = fXOff + 8.7, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 11, iGroup = 1 },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 3, iGroup = 1 },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 11, iGroup = 1 },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 8, iGroup = 2 },
        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 6, iGroup = 1 },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 5, iGroup = 1 },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W'] },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 10, iGroup = 2 },
        --Outside border tiles:
        [2] = { pos = {x = fXOff + -8.7, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [7] = { pos = {x = fXOff + 8.7, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [10] = { pos = {x = fXOff + -10.44, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [16] = { pos = {x = fXOff + 10.44, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [19] = { pos = {x = fXOff + -12.18, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [26] = { pos = {x = fXOff + 12.18, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [29] = { pos = {x = fXOff + -13.92, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['E'], bRandHex = false },
        [37] = { pos = {x = fXOff + 13.92, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['W'], bRandHex = false },
        [40] = { pos = {x = fXOff + -12.18, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [47] = { pos = {x = fXOff + 12.18, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [50] = { pos = {x = fXOff + -10.44, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [56] = { pos = {x = fXOff + 10.44, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [59] = { pos = {x = fXOff + -8.7, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'bricks', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [64] = { pos = {x = fXOff + 8.7, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [68] = { pos = {x = fXOff + -6.96, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false },
        [69] = { pos = {x = fXOff + -3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [70] = { pos = {x = fXOff + 0.0, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [71] = { pos = {x = fXOff + 3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [72] = { pos = {x = fXOff + 6.96, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false },
        [84] = { pos = {x = fXOff + 6.96, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false },
        [85] = { pos = {x = fXOff + 3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [86] = { pos = {x = fXOff + 0.0, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [87] = { pos = {x = fXOff + -3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false, sHarborType = 'lumber', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [88] = { pos = {x = fXOff + -6.96, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false },
    }

    if Global.call('getStateFishermen') == true then
        TileInfo[12].vFishRot = m_BOrientation['S']
        TileInfo[54].vFishRot = m_BOrientation['NW']
        --variable fish tiles (depending on placement of randomized land tiles)
        TileInfo[69].vFishRot = m_BOrientation['S']     TileInfo[69].bVarFish = true
        TileInfo[70].vFishRot = m_BOrientation['S']     TileInfo[70].bVarFish = true
        TileInfo[6].vFishRot = m_BOrientation['S']      TileInfo[6].bVarFish = true
        TileInfo[7].vFishRot = m_BOrientation['SW']     TileInfo[7].bVarFish = true
        TileInfo[16].vFishRot = m_BOrientation['SW']    TileInfo[16].bVarFish = true
        TileInfo[25].vFishRot = m_BOrientation['NW']    TileInfo[25].bVarFish = true
        TileInfo[36].vFishRot = m_BOrientation['SW']    TileInfo[36].bVarFish = true
        TileInfo[56].vFishRot = m_BOrientation['NW']    TileInfo[56].bVarFish = true
        TileInfo[64].vFishRot = m_BOrientation['NW']    TileInfo[64].bVarFish = true
    end

    if Global.call('getStateRivers') == true then
        TileInfo[43].sHexType = 'river_mountain'        TileInfo[43].bRandHex = false    TileInfo[43].bRandNum = bRandom     TileInfo[43].vRot = {0.0,150.0,0.0}
        TileInfo[42].sHexType = 'river_hills'           TileInfo[42].bRandHex = false    TileInfo[42].bRandNum = bRandom     TileInfo[42].vRot = {0.0,150.0,0.0}
        TileInfo[41].sHexType = 'river_swamp_r'         TileInfo[41].bRandHex = false    TileInfo[41].bRandNum = bRandom     TileInfo[41].vRot = {0.0,150.0,0.0}
        TileInfo[41].iNumToken = nil                    TileInfo[41].bRobberPos = true

        TileInfo[52].sHexType = 'pasture'
        TileInfo[31].iNumToken = 8 --number removed with the swamp
        TileInfo[3].iNumToken = 2   TileInfo[3].iNumTokenSec = 12

        --rotate harbors away from river ends
        TileInfo[50].vHarborRot = m_HOrientation['E']
    end

    if Global.call('getStateCaravans') == true then
        TileInfo[43].sHexType = 'oasis'     TileInfo[43].bRandHex = false   TileInfo[43].iNumToken = nil
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = true, iNumChits = 3, sCatanChitDesc = m_ScenarioDef['S1'].sCatanChitDesc })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the pirate ship
    local vPos = {x=TileInfo[36].pos.x, y=TileInfo[36].pos.y + 0.5, z=TileInfo[36].pos.z}
    Global.call('spawnPirate', {vPos = vPos})
    --technically he should start on the number 12 field but we'll just have the pirate take him to the islands
    vPos = {x=TileInfo[36].pos.x + 0.8, y=TileInfo[36].pos.y + 0.5, z=TileInfo[36].pos.z + 1.1}
    Global.call('placeRobber', {vPos = vPos})

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[37].pos.x+1.89})
    end
    return true
end --[[ Seafarers - Scenario 1 - 3 players ]]--

--[[ Seafarers - Scenario 1 - 4 players ]]--
function loadSFScenario1_4P()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['S1'], vMapScale = {29.0, 2.5, 24.0} })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 1.5
    local TileInfo = {
        [2] = { pos = {x = fXOff + -8.7, y = 0.97, z = 9.03}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 8, iGroup = 2 },
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 11, iGroup = 2 },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'gold', bRandHex = bRandom, iNumToken = 4, iGroup = 2 },
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [10] = { pos = {x = fXOff + -10.44, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false, sHarborType = 'ore', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE'] },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 5, iGroup = 2 },
        [15] = { pos = {x = fXOff + 6.96, y = 0.97, z = 6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 2, iGroup = 2 },
        [19] = { pos = {x = fXOff + -12.18, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 5, iGroup = 1 },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 6, iGroup = 1 },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 4, iGroup = 1 },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 9, iGroup = 2 },
        [25] = { pos = {x = fXOff + 8.7, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [29] = { pos = {x = fXOff + -13.92, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE'] },
        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 12, iGroup = 1 },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 11, iGroup = 1 },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 3, iGroup = 1 },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 9, iGroup = 1 },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'gold', bRandHex = bRandom, iNumToken = 10, iGroup = 2 },
        [36] = { pos = {x = fXOff + 10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [40] = { pos = {x = fXOff + -12.18, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 6, iGroup = 1 },
        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 10, iGroup = 1 },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'desert', bRandHex = bRandom, iGroup = 1, bRobberPos = true  },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = bRandom, iGroup = 1, iNumToken = 11 },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iGroup = 1, iNumToken = 5 },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [46] = { pos = {x = fXOff + 8.7, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [50] = { pos = {x = fXOff + -10.44, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 3, iGroup = 1 },
        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 4, iGroup = 1 },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 9, iGroup = 1 },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 8, iGroup = 1 },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false, sHarborType = 'grain', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 3, iGroup = 2 },
        [59] = { pos = {x = fXOff + -8.7, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 8, iGroup = 1 },
        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 2, iGroup = 1 },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 10, iGroup = 1 },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W'] },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 6, iGroup = 2 },
        --Outside border tiles:
        [1] = { pos = {x = fXOff + -12.18, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [7] = { pos = {x = fXOff + 8.7, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [9] = { pos = {x = fXOff + -13.92, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [16] = { pos = {x = fXOff + 10.44, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [18] = { pos = {x = fXOff + -15.66, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [26] = { pos = {x = fXOff + 12.18, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [28] = { pos = {x = fXOff + -17.4, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['E'], bRandHex = false },
        [37] = { pos = {x = fXOff + 13.92, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['W'], bRandHex = false },
        [39] = { pos = {x = fXOff + -15.66, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [47] = { pos = {x = fXOff + 12.18, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [49] = { pos = {x = fXOff + -13.92, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'bricks', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [56] = { pos = {x = fXOff + 10.44, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [58] = { pos = {x = fXOff + -12.18, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [64] = { pos = {x = fXOff + 8.7, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [67] = { pos = {x = fXOff + -10.44, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false },
        [68] = { pos = {x = fXOff + -6.96, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [69] = { pos = {x = fXOff + -3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [70] = { pos = {x = fXOff + 0.0, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [71] = { pos = {x = fXOff + 3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [72] = { pos = {x = fXOff + 6.96, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false },
        [84] = { pos = {x = fXOff + 6.96, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false },
        [85] = { pos = {x = fXOff + 3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [86] = { pos = {x = fXOff + 0.0, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [87] = { pos = {x = fXOff + -3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [88] = { pos = {x = fXOff + -6.96, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false, sHarborType = 'lumber', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [89] = { pos = {x = fXOff + -10.44, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false },
    }

    if Global.call('getStateFishermen') == true then
        --lake
        TileInfo[42].sHexType = 'lake'  TileInfo[42].bRobberPos = nil
        --fish tiles
        TileInfo[11].vFishRot = m_BOrientation['S']
        TileInfo[34].vFishRot = m_BOrientation['SW']
        TileInfo[87].vFishRot = m_BOrientation['N']
        --variable fish tiles (depending on placement of randomized land tiles)
        TileInfo[68].vFishRot = m_BOrientation['S']     TileInfo[68].bVarFish = true
        TileInfo[69].vFishRot = m_BOrientation['S']     TileInfo[69].bVarFish = true
        TileInfo[71].vFishRot = m_BOrientation['S']     TileInfo[71].bVarFish = true
        TileInfo[6].vFishRot = m_BOrientation['SW']     TileInfo[6].bVarFish = true
        TileInfo[7].vFishRot = m_BOrientation['SW']     TileInfo[7].bVarFish = true
        TileInfo[16].vFishRot = m_BOrientation['SW']    TileInfo[16].bVarFish = true
        TileInfo[25].vFishRot = m_BOrientation['NW']    TileInfo[25].bVarFish = true
        TileInfo[36].vFishRot = m_BOrientation['SW']    TileInfo[36].bVarFish = true
        TileInfo[56].vFishRot = m_BOrientation['NW']    TileInfo[56].bVarFish = true
        TileInfo[64].vFishRot = m_BOrientation['NW']    TileInfo[64].bVarFish = true

        Global.call('placeRobber', {vPos = {x=TileInfo[36].pos.x + 0.8, y=TileInfo[36].pos.y + 0.5, z=TileInfo[36].pos.z + 1.1}})
    end

    if Global.call('getStateRivers') == true then
        TileInfo[33].sHexType = 'river_mountain'        TileInfo[33].bRandHex = false    TileInfo[33].bRandNum = bRandom     TileInfo[33].vRot = {0.0,150.0,0.0}
        TileInfo[32].sHexType = 'river_hills'           TileInfo[32].bRandHex = false    TileInfo[32].bRandNum = bRandom     TileInfo[32].vRot = {0.0,150.0,0.0}
        TileInfo[31].sHexType = 'river_pasture'         TileInfo[31].bRandHex = false    TileInfo[31].bRandNum = bRandom     TileInfo[31].vRot = {0.0,150.0,0.0}
        TileInfo[30].sHexType = 'river_swamp_l'         TileInfo[30].bRandHex = false    TileInfo[30].vRot = {0.0,150.0,0.0}
        TileInfo[30].iNumToken = nil                    TileInfo[30].bRobberPos = true   TileInfo[42].bRobberPos = nil

        TileInfo[52].sHexType = 'river_mountain'        TileInfo[52].bRandHex = false    TileInfo[52].bRandNum = bRandom     TileInfo[52].vRot = {0.0,150.0,0.0}
        TileInfo[51].sHexType = 'river_hills'           TileInfo[51].bRandHex = false    TileInfo[51].bRandNum = bRandom     TileInfo[51].vRot = {0.0,150.0,0.0}
        TileInfo[50].sHexType = 'river_swamp_r'         TileInfo[50].bRandHex = false    TileInfo[50].vRot = {0.0,150.0,0.0}
        TileInfo[50].iNumToken = nil

        TileInfo[42].sHexType = 'fields'                TileInfo[42].iNumToken = 2       TileInfo[42].iNumTokenSec = 12
        TileInfo[60].iNumToken = 3
        TileInfo[22].sHexType = 'fields'
    end

    if Global.call('getStateCaravans') == true then
        TileInfo[42].sHexType = 'oasis'     TileInfo[42].bRandHex = false       TileInfo[42].bRobberPos = nil
        Global.call('placeRobber', {vPos = {x=TileInfo[36].pos.x + 0.8, y=TileInfo[36].pos.y + 0.5, z=TileInfo[36].pos.z + 1.1}})
    end

    if Global.call('getStateBarbarianAttack') == true then
        TileInfo[20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = true, bRandNum = bRandom, iNumToken = 12, iGroup = 1 }
        TileInfo[21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = true, bRandNum = bRandom, iNumToken = 9, iGroup = 1 }
        TileInfo[22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = true, bRandNum = bRandom, iNumToken = 3, iGroup = 1 }
        TileInfo[30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = true, bRandNum = bRandom, iNumToken = 4, iGroup = 1 }
        TileInfo[31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'forest', bRandHex = true, bRandNum = bRandom, iNumToken = 6, iGroup = 3 }
        TileInfo[32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = true, bRandNum = bRandom, iNumToken = 4, iGroup = 3 }
        TileInfo[33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = true, bRandNum = bRandom, iNumToken = 8, iGroup = 1 }
        TileInfo[40] = { pos = {x = fXOff + -12.18, y = 0.97, z = -3.01}, sHexType = 'castle', bRandHex = false }
        TileInfo[41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = true, bRandNum = bRandom, iNumToken = 9, iGroup = 3 }
        TileInfo[42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'mountain', bRandHex = true, bRandNum = bRandom, iNumToken = 10, iGroup = 3 }
        TileInfo[43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'mountain', bRandHex = true, bRandNum = bRandom, iNumToken = 5, iGroup = 3 }
        TileInfo[44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'desert', bRandHex = false }
        TileInfo[50] = { pos = {x = fXOff + -10.44, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = true, bRandNum = bRandom, iNumToken = 6, iGroup = 1 }
        TileInfo[51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = true, bRandNum = bRandom, iNumToken = 3, iGroup = 3}
        TileInfo[52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = true, bRandNum = bRandom, iNumToken = 8, iGroup = 3 }
        TileInfo[53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = true, bRandNum = bRandom, iNumToken = 10, iGroup = 1 }
        TileInfo[59] = { pos = {x = fXOff + -8.7, y = 0.97, z = -9.03}, sHexType = 'pasture', bRandHex = true, bRandNum = bRandom, iNumToken = 2, iGroup = 1 }
        TileInfo[60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = true, bRandNum = bRandom, iNumToken = 5, iGroup = 1 }
        TileInfo[61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = true, bRandNum = bRandom, iNumToken = 11, iGroup = 1 }
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = true, iNumChits = 3, sCatanChitDesc = m_ScenarioDef['S1'].sCatanChitDesc })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the pirate ship
    local vPos = {x=TileInfo[36].pos.x, y=TileInfo[36].pos.y + 0.5, z=TileInfo[36].pos.z}
    Global.call('spawnPirate', {vPos = vPos})

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[37].pos.x+1.89})
    end
    return true
end --[[ Seafarers - Scenario 1 - 4 players ]]--

--[[ Seafarers - Scenario 1 - 5-6 players ]]--
function loadSFScenario1_5_6P()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['S1'], vMapScale = {34.0, 2.5, 24.0}, bExtension = true })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 1.5
    local TileInfo = {
        [1] = { pos = {x = fXOff + -12.18, y = 0.97, z = 9.03}, sHexType = 'gold', bRandHex = bRandom, iNumToken = 9, iGroup = 2 },
        [2] = { pos = {x = fXOff + -8.7, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['SE'] },
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'mountain', bRandHex = true, iNumToken = 2, iGroup = 1 },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = true, iNumToken = 2, iGroup = 1 },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = true, iNumToken = 3, iGroup = 1 },
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['SW'] },
        [7] = { pos = {x = fXOff + 8.7, y = 0.97, z = 9.03}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 6, iGroup = 2 },
        [9] = { pos = {x = fXOff + -13.92, y = 0.97, z = 6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 11, iGroup = 2 },
        [10] = { pos = {x = fXOff + -10.44, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = true, iNumToken = 3, iGroup = 1 },
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'hills', bRandHex = true, iNumToken = 3, iGroup = 1 },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'fields', bRandHex = true, iNumToken = 4, iGroup = 1 },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'fields', bRandHex = true, iNumToken = 4, iGroup = 1 },
        [15] = { pos = {x = fXOff + 6.96, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [16] = { pos = {x = fXOff + 10.44, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [18] = { pos = {x = fXOff + -15.66, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 8, iGroup = 2 },
        [19] = { pos = {x = fXOff + -12.18, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'lumber', bRandHarbor = true, vHarborRot = m_HOrientation['E'] },
        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 4, iGroup = 1 },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'desert', bRandHex = true, iGroup = 1, bRobberPos = true },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = true, iNumToken = 5, iGroup = 1 },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = true, iNumToken = 5, iGroup = 1 },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'mountain', bRandHex = true, iNumToken = 6, iGroup = 1 },
        [25] = { pos = {x = fXOff + 8.7, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'bricks', bRandHarbor = true, vHarborRot = m_HOrientation['W'] },
        [26] = { pos = {x = fXOff + 12.18, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 12, iGroup = 2 },
        [28] = { pos = {x = fXOff + -17.4, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [29] = { pos = {x = fXOff + -13.92, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = true, iNumToken = 6, iGroup = 1 },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'forest', bRandHex = true, iNumToken = 6, iGroup = 1 },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'forest', bRandHex = true, iNumToken = 8, iGroup = 1 },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = true, iNumToken = 8, iGroup = 1 },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = true, iNumToken = 8, iGroup = 1 },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = true, iNumToken = 9, iGroup = 1 },
        [36] = { pos = {x = fXOff + 10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [37] = { pos = {x = fXOff + 13.92, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [39] = { pos = {x = fXOff + -15.66, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 4, iGroup = 2 },
        [40] = { pos = {x = fXOff + -12.18, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'grain', bRandHarbor = true, vHarborRot = m_HOrientation['NE'] },
        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 9, iGroup = 1 },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'mountain', bRandHex = true, iNumToken = 9, iGroup = 1 },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'mountain', bRandHex = true, iNumToken = 10, iGroup = 1 },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'desert', bRandHex = true, iGroup = 1 },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 10, iGroup = 1 },
        [46] = { pos = {x = fXOff + 8.7, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'wool', bRandHarbor = true, vHarborRot = m_HOrientation['NW'] },
        [47] = { pos = {x = fXOff + 12.18, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 3, iGroup = 2 },
        [49] = { pos = {x = fXOff + -13.92, y = 0.97, z = -6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 2, iGroup = 2 },
        [50] = { pos = {x = fXOff + -10.44, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false },
        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = true, iNumToken = 11, iGroup = 1 },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = true, iNumToken = 11, iGroup = 1 },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = true, iNumToken = 11, iGroup = 1 },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = true, iNumToken = 12, iGroup = 1 },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false, sHarborType = 'ore', bRandHarbor = true, vHarborRot = m_HOrientation['W'] },
        [56] = { pos = {x = fXOff + 10.44, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [58] = { pos = {x = fXOff + -12.18, y = 0.97, z = -9.03}, sHexType = 'gold', bRandHex = bRandom, iNumToken = 5, iGroup = 2 },
        [59] = { pos = {x = fXOff + -8.7, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false, sHarborType = 'wool', bRandHarbor = true, vHarborRot = m_HOrientation['NE'] },
        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'pasture', bRandHex = true, iNumToken = 12, iGroup = 1 },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'pasture', bRandHex = true, iNumToken = 5, iGroup = 1  },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'forest', bRandHex = true, iNumToken = 10, iGroup = 1 },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false, },
        [64] = { pos = {x = fXOff + 8.7, y = 0.97, z = -9.03}, sHexType = 'gold', bRandHex = bRandom, iNumToken = 10, iGroup = 2 },
        --Outside border tiles:
        [8] = { pos = {x = fXOff + 12.18, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [17] = { pos = {x = fXOff + 13.92, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [27] = { pos = {x = fXOff + 15.66, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [38] = { pos = {x = fXOff + 17.4, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['W'], bRandHex = false },
        [48] = { pos = {x = fXOff + 15.66, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [57] = { pos = {x = fXOff + 13.92, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [65] = { pos = {x = fXOff + 12.18, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [66] = { pos = {x = fXOff + -13.92, y = 0.965, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false },
        [67] = { pos = {x = fXOff + -10.44, y = 0.965, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [68] = { pos = {x = fXOff + -6.96, y = 0.965, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [69] = { pos = {x = fXOff + -3.48, y = 0.965, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [70] = { pos = {x = fXOff + 0.0, y = 0.965, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['SW'] },
        [71] = { pos = {x = fXOff + 3.48, y = 0.965, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [72] = { pos = {x = fXOff + 6.96, y = 0.965, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [73] = { pos = {x = fXOff + 10.44, y = 0.965, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false },
        [83] = { pos = {x = fXOff + 10.44, y = 0.965, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false },
        [84] = { pos = {x = fXOff + 6.96, y = 0.965, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [85] = { pos = {x = fXOff + 3.48, y = 0.965, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['NW'] },
        [86] = { pos = {x = fXOff + 0.0, y = 0.965, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [87] = { pos = {x = fXOff + -3.48, y = 0.965, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['NE'] },
        [88] = { pos = {x = fXOff + -6.96, y = 0.965, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [89] = { pos = {x = fXOff + -10.44, y = 0.965, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [90] = { pos = {x = fXOff + -13.92, y = 0.965, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false },
        [91] = { pos = {x = fXOff + -15.66, y = 0.965, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [92] = { pos = {x = fXOff + -17.4, y = 0.965, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [93] = { pos = {x = fXOff + -19.14, y = 0.965, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [94] = { pos = {x = fXOff + -20.88, y = 0.965, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['E'], bRandHex = false },
        [95] = { pos = {x = fXOff + -19.14, y = 0.965, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [96] = { pos = {x = fXOff + -17.4, y = 0.965, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [97] = { pos = {x = fXOff + -15.66, y = 0.965, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
    }

    if Global.call('getStateFishermen') == true then
        --lake
        TileInfo[21].sHexType = 'lake'  TileInfo[21].bRobberPos = nil
        TileInfo[44].sHexType = 'lake'  TileInfo[44].bSecLake = true
        --fish tiles
        TileInfo[69].vFishRot = m_BOrientation['S']
        TileInfo[86].vFishRot = m_BOrientation['N']
        TileInfo[10].vFishRot = m_BOrientation['SE']
        TileInfo[15].vFishRot = m_BOrientation['SW']
        TileInfo[50].vFishRot = m_BOrientation['NE']
        TileInfo[63].vFishRot = m_BOrientation['NW']
        --variable fish tiles (depending on placement of randomized land tiles)
        TileInfo[97].vFishRot = m_BOrientation['SE']    TileInfo[97].bVarFish = true
        TileInfo[96].vFishRot = m_BOrientation['SE']    TileInfo[96].bVarFish = true
        TileInfo[92].vFishRot = m_BOrientation['NE']    TileInfo[92].bVarFish = true
        TileInfo[91].vFishRot = m_BOrientation['NE']    TileInfo[91].bVarFish = true
        TileInfo[65].vFishRot = m_BOrientation['NW']    TileInfo[65].bVarFish = true
        TileInfo[57].vFishRot = m_BOrientation['NW']    TileInfo[57].bVarFish = true
        TileInfo[17].vFishRot = m_BOrientation['SW']    TileInfo[17].bVarFish = true
        TileInfo[8].vFishRot = m_BOrientation['SW']     TileInfo[8].bVarFish = true

        Global.call('placeRobber', {vPos = {x=TileInfo[38].pos.x, y=TileInfo[38].pos.y + 0.5, z=TileInfo[38].pos.z + 1.1}})
    end

    if Global.call('getStateRivers') == true then
        TileInfo[32].sHexType = 'river_mountain'        TileInfo[32].bRandHex = false    TileInfo[32].bRandNum = true     TileInfo[32].vRot = {0.0,150.0,0.0}
        TileInfo[31].sHexType = 'river_ext_pasture1'    TileInfo[31].bRandHex = false    TileInfo[31].bRandNum = true     TileInfo[31].vRot = {0.0,150.0,0.0}
        TileInfo[30].sHexType = 'river_ext_pasture2'    TileInfo[30].bRandHex = false    TileInfo[30].bRandNum = true     TileInfo[30].vRot = {0.0,150.0,0.0}

        TileInfo[34].sHexType = 'river_mountain'        TileInfo[34].bRandHex = false    TileInfo[34].bRandNum = true     TileInfo[34].vRot = {0.0,210.0,0.0}
        TileInfo[23].sHexType = 'river_hills'           TileInfo[23].bRandHex = false    TileInfo[23].bRandNum = true     TileInfo[23].vRot = {0.0,210.0,0.0}
        TileInfo[13].sHexType = 'river_pasture'         TileInfo[13].bRandHex = false    TileInfo[13].bRandNum = true     TileInfo[13].vRot = {0.0,210.0,0.0}
        TileInfo[4].sHexType = 'river_swamp_l'          TileInfo[4].bRandHex = false     TileInfo[4].vRot = {0.0,210.0,0.0}
        TileInfo[4].iNumToken = nil                     TileInfo[4].bRobberPos = true

        TileInfo[44].sHexType = 'river_mountain'        TileInfo[44].bRandHex = false    TileInfo[44].bRandNum = true     TileInfo[44].vRot = {0.0,90.0,0.0}
        TileInfo[44].iNumToken = 2
        TileInfo[53].sHexType = 'river_hills'           TileInfo[53].bRandHex = false    TileInfo[53].bRandNum = true     TileInfo[53].vRot = {0.0,90.0,0.0}
        TileInfo[61].sHexType = 'river_swamp_r'         TileInfo[61].bRandHex = false    TileInfo[61].vRot = {0.0,90.0,0.0}
        TileInfo[61].iNumToken = nil

        TileInfo[42].sHexType = 'forest'
        TileInfo[43].sHexType = 'forest'
        TileInfo[21].sHexType = 'forest'                TileInfo[21].iNumToken = 5       TileInfo[21].bRobberPos = nil
        TileInfo[35].sHexType = 'fields'

        --rotate harbors away from river ends
        TileInfo[70].vHarborRot = m_HOrientation['SE']
        TileInfo[40].vHarborRot = m_HOrientation['E']
    end

    if Global.call('getStateCaravans') == true then
        TileInfo[21].sHexType = 'oasis'     TileInfo[21].bRandHex = false
        TileInfo[44].sHexType = 'oasis'     TileInfo[44].bRandHex = false

        TileInfo[21].bRobberPos = nil
        Global.call('placeRobber', {vPos = {x=TileInfo[38].pos.x, y=TileInfo[38].pos.y + 0.5, z=TileInfo[38].pos.z + 1.1}})
    end

    if Global.call('getStateBarbarianAttack') == true then
        TileInfo[3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = true, iNumToken = 11, bRandNum = bRandom, iGroup = 1  }
        TileInfo[4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = true, iNumToken = 5, bRandNum = bRandom, iGroup = 1 }
        TileInfo[5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = true, iNumToken = 2, bRandNum = bRandom, iGroup = 1 }

        TileInfo[11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'hills', bRandHex = true, iNumToken = 10, bRandNum = bRandom, iGroup = 1 }
        TileInfo[12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = true, iNumToken = 9, bRandNum = bRandom, iGroup = 3 }
        TileInfo[13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = true, iNumToken = 4, bRandNum = bRandom, iGroup = 3 }
        TileInfo[14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'hills', bRandHex = true, iNumToken = 6, bRandNum = bRandom, iGroup = 1 }

        TileInfo[20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 9, bRandNum = bRandom, iGroup = 1 }
        TileInfo[21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 11, bRandNum = bRandom, iGroup = 3 }
        TileInfo[22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 8, bRandNum = bRandom, iGroup = 3 }
        TileInfo[23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = true, iNumToken = 3, bRandNum = bRandom, iGroup = 3 }
        TileInfo[24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'desert', bRandHex = false, iGroup = 1 }

        TileInfo[30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'castle', bRandHex = false }
        TileInfo[31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = true, iNumToken = 6, bRandNum = bRandom, iGroup = 3 }
        TileInfo[32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = true, iNumToken = 4, bRandNum = bRandom, iGroup = 3 }
        TileInfo[33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = true, iNumToken = 10, bRandNum = bRandom, iGroup = 3 }
        TileInfo[34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = true, iNumToken = 8, bRandNum = bRandom, iGroup = 3 }
        TileInfo[35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'castle', bRandHex = false }

        TileInfo[41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'desert', bRandHex = false }
        TileInfo[42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'mountain', bRandHex = true, iNumToken = 3, bRandNum = bRandom, iGroup = 3 }
        TileInfo[43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 6, bRandNum = bRandom, iGroup = 3 }
        TileInfo[44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 11, bRandNum = bRandom, iGroup = 3 }
        TileInfo[45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'pasture', bRandHex = true, iNumToken = 5, bRandNum = bRandom, iGroup = 1 }

        TileInfo[51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = true, iNumToken = 8, bRandNum = bRandom, iGroup = 1 }
        TileInfo[52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = true, iNumToken = 10, bRandNum = bRandom, iGroup = 3 }
        TileInfo[53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = true, iNumToken = 5, bRandNum = bRandom, iGroup = 3 }
        TileInfo[54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = true, iNumToken = 4, bRandNum = bRandom, iGroup = 1 }

        TileInfo[60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'mountain', bRandHex = true, iNumToken = 3, bRandNum = bRandom, iGroup = 1 }
        TileInfo[61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = true, iNumToken = 9, bRandNum = bRandom, iGroup = 1 }
        TileInfo[62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = true, iNumToken = 12, bRandNum = bRandom, iGroup = 1 }
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = true, iNumChits = 6, sCatanChitDesc = m_ScenarioDef['S1'].sCatanChitDesc })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the pirate ship
    local vPos = {x=TileInfo[37].pos.x, y=TileInfo[37].pos.y + 0.5, z=TileInfo[37].pos.z}
    Global.call('spawnPirate', {vPos = vPos})

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[38].pos.x+1.89})
    end
    return true
end --[[ Seafarers - Scenario 1 - 5-6 players ]]--

--[[ Seafarers - Scenario 2 - 3 players ]]--
function loadSFScenario2_3P()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['S2'], vMapScale = {24.0, 2.5, 24.0} })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 0.0
    local TileInfo = {
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = false },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = false },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 4 },
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 3 },
        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 4 },
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 9 },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 9 },
        [15] = { pos = {x = fXOff + 6.96, y = 0.97, z = 6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 5 },
        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 6 },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 10 },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'ore', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 8 },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 11 },
        [25] = { pos = {x = fXOff + 8.7, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'lumber', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'bricks', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [36] = { pos = {x = fXOff + 10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 11 },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 8 },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 3 },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE'] },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 10 },
        [46] = { pos = {x = fXOff + 8.7, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 6 },
        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 5 },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 9 },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 2 },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 5 },
        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 12 },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false },
        --Outside border tiles:
        [2] = { pos = {x = fXOff + -8.7, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [7] = { pos = {x = fXOff + 8.7, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [10] = { pos = {x = fXOff + -10.44, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE'] },
        [16] = { pos = {x = fXOff + 10.44, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [19] = { pos = {x = fXOff + -12.18, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [26] = { pos = {x = fXOff + 12.18, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [29] = { pos = {x = fXOff + -13.92, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['E'], bRandHex = false },
        [37] = { pos = {x = fXOff + 13.92, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['W'], bRandHex = false },
        [40] = { pos = {x = fXOff + -12.18, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [47] = { pos = {x = fXOff + 12.18, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [50] = { pos = {x = fXOff + -10.44, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [56] = { pos = {x = fXOff + 10.44, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false, sHarborType = 'grain', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [59] = { pos = {x = fXOff + -8.7, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [64] = { pos = {x = fXOff + 8.7, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [68] = { pos = {x = fXOff + -6.96, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false },
        [69] = { pos = {x = fXOff + -3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [70] = { pos = {x = fXOff + 0.0, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [71] = { pos = {x = fXOff + 3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [72] = { pos = {x = fXOff + 6.96, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false },
        [84] = { pos = {x = fXOff + 6.96, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false },
        [85] = { pos = {x = fXOff + 3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [86] = { pos = {x = fXOff + 0.0, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [87] = { pos = {x = fXOff + -3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [88] = { pos = {x = fXOff + -6.96, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false },
    }

    if Global.call('getStateFishermen') == true then
        --fish tiles
        TileInfo[3].vFishRot = m_BOrientation['S']
        TileInfo[59].vFishRot = m_BOrientation['NE']
        TileInfo[63].vFishRot = m_BOrientation['N']
        TileInfo[71].vFishRot = m_BOrientation['S']
        TileInfo[25].vFishRot = m_BOrientation['NW']
        TileInfo[32].vFishRot = m_BOrientation['S']
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = true, iNumChits = 3, sCatanChitDesc = m_ScenarioDef['S2'].sCatanChitDesc })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the pirate ship
    local vPos = {x=TileInfo[86].pos.x, y=TileInfo[86].pos.y + 0.5, z=TileInfo[86].pos.z}
    Global.call('spawnPirate', {vPos = vPos, vRot = {0.0,200.0,0.0}})
    --technically he should start on the number 12 field but we'll just make him swim to the islands
    vPos = {x=TileInfo[87].pos.x, y=TileInfo[87].pos.y + 0.5, z=TileInfo[87].pos.z}
    Global.call('placeRobber', {vPos = vPos})

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[37].pos.x+1.89})
    end
    return true
end --[[ Seafarers - Scenario 2 - 3 players ]]--

--[[ Seafarers - Scenario 2 - 4 players ]]--
function loadSFScenario2_4P()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['S2'], vMapScale = {24.0, 2.5, 24.0} })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 0.0
    local TileInfo = {
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 8 },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = false },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 9 },
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 11 },
        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 10 },
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 3 },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 12 },
        [15] = { pos = {x = fXOff + 6.96, y = 0.97, z = 6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 5 },
        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 5 },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 3 },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE'] },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 5 },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 10 },
        [25] = { pos = {x = fXOff + 8.7, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'lumber', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 6 },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'ore', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE'] },
        [36] = { pos = {x = fXOff + 10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 4 },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 9 },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 9 },
        [46] = { pos = {x = fXOff + 8.7, y = 0.97, z = -3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 11 },
        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 6 },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 4 },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 2 },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 8 },
        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 10 },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 11 },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 4 },
        --Outside border tiles:
        [2] = { pos = {x = fXOff + -8.7, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [7] = { pos = {x = fXOff + 8.7, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [10] = { pos = {x = fXOff + -10.44, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false, sHarborType = 'grain', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [16] = { pos = {x = fXOff + 10.44, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [19] = { pos = {x = fXOff + -12.18, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [26] = { pos = {x = fXOff + 12.18, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [29] = { pos = {x = fXOff + -13.92, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['E'], bRandHex = false },
        [37] = { pos = {x = fXOff + 13.92, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['W'], bRandHex = false },
        [40] = { pos = {x = fXOff + -12.18, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [47] = { pos = {x = fXOff + 12.18, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [50] = { pos = {x = fXOff + -10.44, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'bricks', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [56] = { pos = {x = fXOff + 10.44, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [59] = { pos = {x = fXOff + -8.7, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [64] = { pos = {x = fXOff + 8.7, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [68] = { pos = {x = fXOff + -6.96, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false },
        [69] = { pos = {x = fXOff + -3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [70] = { pos = {x = fXOff + 0.0, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [71] = { pos = {x = fXOff + 3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [72] = { pos = {x = fXOff + 6.96, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false },
        [84] = { pos = {x = fXOff + 6.96, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false },
        [85] = { pos = {x = fXOff + 3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [86] = { pos = {x = fXOff + 0.0, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [87] = { pos = {x = fXOff + -3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [88] = { pos = {x = fXOff + -6.96, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false },
    }

    if Global.call('getStateFishermen') == true then
        --fish tiles
        TileInfo[2].vFishRot = m_BOrientation['SE']
        TileInfo[71].vFishRot = m_BOrientation['S']
        TileInfo[7].vFishRot = m_BOrientation['SW']
        TileInfo[87].vFishRot = m_BOrientation['N']
        TileInfo[62].vFishRot = m_BOrientation['NW']
        TileInfo[64].vFishRot = m_BOrientation['NW']
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = true, iNumChits = 3, sCatanChitDesc = m_ScenarioDef['S2'].sCatanChitDesc })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the pirate ship
    local vPos = {x=TileInfo[70].pos.x, y=TileInfo[70].pos.y + 0.5, z=TileInfo[70].pos.z}
    Global.call('spawnPirate', {vPos = vPos})
    --technically he should start on the number 12 field but we'll just make him swim to the islands
    vPos = {x=TileInfo[71].pos.x, y=TileInfo[71].pos.y + 0.5, z=TileInfo[71].pos.z}
    Global.call('placeRobber', {vPos = vPos})

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[37].pos.x+1.89})
    end
    return true
end --[[ Seafarers - Scenario 2 - 4 players ]]--

--[[ Seafarers - Scenario 2 - 5-6 players ]]--
function loadSFScenario2_5_6P()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['S2'], vMapScale = {34.0, 2.5, 24.0}, bExtension = true })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 1.5
    local TileInfo = {
        [1] = { pos = {x = fXOff + -12.18, y = 0.97, z = 9.03}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 12 },
        [2] = { pos = {x = fXOff + -8.7, y = 0.97, z = 9.03}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 4 },
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = false },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 6 },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = false },
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 9 },
        [7] = { pos = {x = fXOff + 8.7, y = 0.97, z = 9.03}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 6 },
        [9] = { pos = {x = fXOff + -13.92, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 8 },
        [10] = { pos = {x = fXOff + -10.44, y = 0.97, z = 6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 10 },
        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 11 },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 10 },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'ocean',bRandHex = false },
        [15] = { pos = {x = fXOff + 6.96, y = 0.97, z = 6.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 3 },
        [16] = { pos = {x = fXOff + 10.44, y = 0.97, z = 6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 10 },
        [18] = { pos = {x = fXOff + -15.66, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 11 },
        [19] = { pos = {x = fXOff + -12.18, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 9 },
        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['NW'] },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 3 },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 4 },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'lumber', bRandHarbor = true, vHarborRot = m_HOrientation['NE'] },
        [25] = { pos = {x = fXOff + 8.7, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 4 },
        [26] = { pos = {x = fXOff + 12.18, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [28] = { pos = {x = fXOff + -17.4, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [29] = { pos = {x = fXOff + -13.92, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'bricks', bRandHarbor = true, vHarborRot = m_HOrientation['NE'] },
        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [36] = { pos = {x = fXOff + 10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [37] = { pos = {x = fXOff + 13.92, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [39] = { pos = {x = fXOff + -15.66, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [40] = { pos = {x = fXOff + -12.18, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 4 },
        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 8 },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 10 },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [46] = { pos = {x = fXOff + 8.7, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 5 },
        [47] = { pos = {x = fXOff + 12.18, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 6 },
        [49] = { pos = {x = fXOff + -13.92, y = 0.97, z = -6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 9 },
        [50] = { pos = {x = fXOff + -10.44, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 12 },
        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false, sHarborType = 'grain', bRandHarbor = true, vHarborRot = m_HOrientation['SW'] },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 5 },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 3 },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 8 },
        [56] = { pos = {x = fXOff + 10.44, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 9 },
        [58] = { pos = {x = fXOff + -12.18, y = 0.97, z = -9.03}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 5 },
        [59] = { pos = {x = fXOff + -8.7, y = 0.97, z = -9.03}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 6 },
        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false, sHarborType = 'wool', bRandHarbor = true, vHarborRot = m_HOrientation['NE'] },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 2 },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 5 },
        [64] = { pos = {x = fXOff + 8.7, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 2 },
        --Outside border tiles:
        [8] = { pos = {x = fXOff + 12.18, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [17] = { pos = {x = fXOff + 13.92, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [27] = { pos = {x = fXOff + 15.66, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [38] = { pos = {x = fXOff + 17.4, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['W'], bRandHex = false },
        [48] = { pos = {x = fXOff + 15.66, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [57] = { pos = {x = fXOff + 13.92, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false, sHarborType = 'ore', bRandHarbor = true, vHarborRot = m_HOrientation['W'] },
        [65] = { pos = {x = fXOff + 12.18, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [66] = { pos = {x = fXOff + -13.92, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false },
        [67] = { pos = {x = fXOff + -10.44, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['SE'] },
        [68] = { pos = {x = fXOff + -6.96, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [69] = { pos = {x = fXOff + -3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [70] = { pos = {x = fXOff + 0.0, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['SW'] },
        [71] = { pos = {x = fXOff + 3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [72] = { pos = {x = fXOff + 6.96, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [73] = { pos = {x = fXOff + 10.44, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['SW'] },
        [83] = { pos = {x = fXOff + 10.44, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false },
        [84] = { pos = {x = fXOff + 6.96, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [85] = { pos = {x = fXOff + 3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['NE'] },
        [86] = { pos = {x = fXOff + 0.0, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [87] = { pos = {x = fXOff + -3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [88] = { pos = {x = fXOff + -6.96, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [89] = { pos = {x = fXOff + -10.44, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [90] = { pos = {x = fXOff + -13.92, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false },
        [91] = { pos = {x = fXOff + -15.66, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [92] = { pos = {x = fXOff + -17.4, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'wool', bRandHarbor = true, vHarborRot = m_HOrientation['E'] },
        [93] = { pos = {x = fXOff + -19.14, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [94] = { pos = {x = fXOff + -20.88, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['E'], bRandHex = false },
        [95] = { pos = {x = fXOff + -19.14, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [96] = { pos = {x = fXOff + -17.4, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [97] = { pos = {x = fXOff + -15.66, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
    }

    if Global.call('getStateFishermen') == true then
        --fish tiles
        TileInfo[96].vFishRot = m_BOrientation['SE']
        TileInfo[3].vFishRot = m_BOrientation['SE']
        TileInfo[26].vFishRot = m_BOrientation['NW']
        TileInfo[39].vFishRot = m_BOrientation['SE']
        TileInfo[62].vFishRot = m_BOrientation['NW']
        TileInfo[65].vFishRot = m_BOrientation['NW']
        --variable fish tiles (depending on placement of randomized land tiles)
        TileInfo[72].vFishRot = m_BOrientation['S']     TileInfo[72].bVarFish = true
        TileInfo[84].vFishRot = m_BOrientation['N']     TileInfo[84].bVarFish = true
        TileInfo[8].vFishRot = m_BOrientation['SW']     TileInfo[8].bVarFish = true
        TileInfo[91].vFishRot = m_BOrientation['NE']    TileInfo[91].bVarFish = true
        TileInfo[89].vFishRot = m_BOrientation['N']     TileInfo[89].bVarFish = true
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = true, iNumChits = 5, sCatanChitDesc = m_ScenarioDef['S2'].sCatanChitDesc })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the pirate ship
    local vPos = {x=TileInfo[28].pos.x, y=TileInfo[28].pos.y + 0.5, z=TileInfo[28].pos.z}
    Global.call('spawnPirate', {vPos = vPos, vRot = {0.0,20.0,0.0}})
    --technically he should start on the number 12 field but we'll just make him swim to the islands
    vPos = {x=TileInfo[95].pos.x, y=TileInfo[95].pos.y + 0.5, z=TileInfo[95].pos.z}
    Global.call('placeRobber', {vPos = vPos})

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[38].pos.x+1.89})
    end
    return true
end --[[ Seafarers - Scenario 2 - 5-6 players ]]--

--[[ Seafarers - Scenario 3 - 3 players ]]--
function loadSFScenario3_3P()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['S3'], vMapScale = {28.0, 2.5, 24.0} })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 1.5
    local TileInfo = {
        [2] = { pos = {x = fXOff + -8.7, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = true, iGroup = 3, bFlipped = true },
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = true, iGroup = 3, bFlipped = true },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = false },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 6, iGroup = 2 },
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 11, iGroup = 2 },
        [10] = { pos = {x = fXOff + -10.44, y = 0.97, z = 6.02}, sHexType = 'gold', bRandHex = true, iNumToken = 3, iGroup = 3, bFlipped = true },
        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'gold', bRandHex = true, iNumToken = 3, iGroup = 3, bFlipped = true },
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'fields', bRandHex = true, iNumToken = 4, iGroup = 3, bFlipped = true },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 5, iGroup = 2 },
        [15] = { pos = {x = fXOff + 6.96, y = 0.97, z = 6.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 3, iGroup = 2 },
        [19] = { pos = {x = fXOff + -12.18, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 5, iGroup = 3, bFlipped = true },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 8, iGroup = 2 },
        [25] = { pos = {x = fXOff + 8.7, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 9, iGroup = 2 },
        [29] = { pos = {x = fXOff + -13.92, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 6, iGroup = 1 },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 5, iGroup = 1 },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = true, iNumToken = 6, iGroup = 3, bFlipped = true },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 4, iGroup = 2 },
        [36] = { pos = {x = fXOff + 10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W'] },
        [40] = { pos = {x = fXOff + -12.18, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'ore', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 11, iGroup = 1 },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 9, iGroup = 1 },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 8, iGroup = 3, bFlipped = true },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [46] = { pos = {x = fXOff + 8.7, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [50] = { pos = {x = fXOff + -10.44, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false, sHarborType = 'lumber', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 8, iGroup = 1 },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 10, iGroup = 1 },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = true, iNumToken = 9, iGroup = 3, bFlipped = true },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = true, iNumToken = 10, iGroup = 3, bFlipped = true },
        [59] = { pos = {x = fXOff + -8.7, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 12, iGroup = 1 },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false, sHarborType = 'bricks', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'pasture', bRandHex = true, iNumToken = 11, iGroup = 3, bFlipped = true },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'forest', bRandHex = true, iNumToken = 12, iGroup = 3, bFlipped = true },
        --Outside border tiles:
        [1] = { pos = {x = fXOff + -12.18, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [7] = { pos = {x = fXOff + 8.7, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W'] },
        [9] = { pos = {x = fXOff + -13.92, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [16] = { pos = {x = fXOff + 10.44, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false, sHarborType = 'grain', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [18] = { pos = {x = fXOff + -15.66, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [26] = { pos = {x = fXOff + 12.18, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [28] = { pos = {x = fXOff + -17.4, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['E'], bRandHex = false },
        [37] = { pos = {x = fXOff + 13.92, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['W'], bRandHex = false },
        [39] = { pos = {x = fXOff + -15.66, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [47] = { pos = {x = fXOff + 12.18, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [49] = { pos = {x = fXOff + -13.92, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [56] = { pos = {x = fXOff + 10.44, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [58] = { pos = {x = fXOff + -12.18, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [64] = { pos = {x = fXOff + 8.7, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [67] = { pos = {x = fXOff + -10.44, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false },
        [68] = { pos = {x = fXOff + -6.96, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [69] = { pos = {x = fXOff + -3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [70] = { pos = {x = fXOff + 0.0, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [71] = { pos = {x = fXOff + 3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [72] = { pos = {x = fXOff + 6.96, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false },
        [84] = { pos = {x = fXOff + 6.96, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false },
        [85] = { pos = {x = fXOff + 3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [86] = { pos = {x = fXOff + 0.0, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [87] = { pos = {x = fXOff + -3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [88] = { pos = {x = fXOff + -6.96, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [89] = { pos = {x = fXOff + -10.44, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false },
    }

    if Global.call('getStateFishermen') == true then
        --fish tiles
        TileInfo[13].vFishRot = m_BOrientation['NE']
        TileInfo[20].vFishRot = m_BOrientation['S']
        TileInfo[34].vFishRot = m_BOrientation['NE']
        TileInfo[43].vFishRot = m_BOrientation['SW']
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = true, iNumChits = 0 })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the pirate ship
    local vPos = {x=TileInfo[64].pos.x, y=TileInfo[64].pos.y + 0.5, z=TileInfo[64].pos.z}
    Global.call('spawnPirate', { vPos = vPos, vRot = {0.0,200.0,0.0} })
    --technically he should start on the number 12 field but we'll just make him swim to the islands
    vPos = {x=TileInfo[87].pos.x, y=TileInfo[87].pos.y + 0.5, z=TileInfo[87].pos.z}
    Global.call('placeRobber', {vPos = vPos})

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[37].pos.x+1.89})
    end
    return true
end --[[ Seafarers - Scenario 3 - 3 players ]]--

--[[ Seafarers - Scenario 3 - 4 players ]]--
function loadSFScenario3_4P()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['S3'], vMapScale = {28.0, 2.5, 24.0} })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 1.5
    local TileInfo = {
        [2] = { pos = {x = fXOff + -8.7, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = true, bFlipped = true, iGroup = 3},
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = false },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 4, iGroup = 2 },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 10, iGroup = 2 },
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 3, iGroup = 2 },
        [10] = { pos = {x = fXOff + -10.44, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = true, bFlipped = true, iGroup = 3 },
        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'fields', bRandHex = true, iNumToken = 3, bFlipped = true, iGroup = 3 },
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 9, iGroup = 2 },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 6, iGroup = 2 },
        [15] = { pos = {x = fXOff + 6.96, y = 0.97, z = 6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 12, iGroup = 2 },
        [19] = { pos = {x = fXOff + -12.18, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'mountain', bRandHex = true, iNumToken = 4, bFlipped = true, iGroup = 3 },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 10, iGroup = 2 },
        [25] = { pos = {x = fXOff + 8.7, y = 0.97, z = 3.01}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 8, iGroup = 2 },
        [29] = { pos = {x = fXOff + -13.92, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'lumber', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 3, iGroup = 1 },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = true, iNumToken = 5, bFlipped = true, iGroup = 3 },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'forest', bRandHex = true, iNumToken = 6, bFlipped = true, iGroup = 3 },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 11, iGroup = 2 },
        [36] = { pos = {x = fXOff + 10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [40] = { pos = {x = fXOff + -12.18, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 6, iGroup = 1 },
        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 4, iGroup = 1 },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 8, bFlipped = true, iGroup = 3 },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = true, iNumToken = 9, bFlipped = true, iGroup = 3 },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [46] = { pos = {x = fXOff + 8.7, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 5, iGroup = 2 },
        [50] = { pos = {x = fXOff + -10.44, y = 0.97, z = -6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 9, iGroup = 1 },
        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 8, iGroup = 1 },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = true, iNumToken = 10, bFlipped = true, iGroup = 3 },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = true, iNumToken = 11, bFlipped = true, iGroup = 3 },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false },
        [59] = { pos = {x = fXOff + -8.7, y = 0.97, z = -9.03}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 2, iGroup = 1 },
        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 5, iGroup = 1 },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'gold', bRandHex = true, iNumToken = 11, bFlipped = true, iGroup = 3 },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'gold', bRandHex = true, iNumToken = 12, bFlipped = true, iGroup = 3 },
        --Outside border tiles:
        [1] = { pos = {x = fXOff + -12.18, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [7] = { pos = {x = fXOff + 8.7, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W'] },
        [9] = { pos = {x = fXOff + -13.92, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [16] = { pos = {x = fXOff + 10.44, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false, sHarborType = 'bricks', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [18] = { pos = {x = fXOff + -15.66, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [26] = { pos = {x = fXOff + 12.18, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [28] = { pos = {x = fXOff + -17.4, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['E'], bRandHex = false },
        [37] = { pos = {x = fXOff + 13.92, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['W'], bRandHex = false },
        [39] = { pos = {x = fXOff + -15.66, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [47] = { pos = {x = fXOff + 12.18, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [49] = { pos = {x = fXOff + -13.92, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'ore', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [56] = { pos = {x = fXOff + 10.44, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [58] = { pos = {x = fXOff + -12.18, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [64] = { pos = {x = fXOff + 8.7, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [67] = { pos = {x = fXOff + -10.44, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false },
        [68] = { pos = {x = fXOff + -6.96, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [69] = { pos = {x = fXOff + -3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [70] = { pos = {x = fXOff + 0.0, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [71] = { pos = {x = fXOff + 3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false, sHarborType = 'grain', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE'] },
        [72] = { pos = {x = fXOff + 6.96, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false },
        [84] = { pos = {x = fXOff + 6.96, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false },
        [85] = { pos = {x = fXOff + 3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [86] = { pos = {x = fXOff + 0.0, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [87] = { pos = {x = fXOff + -3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [88] = { pos = {x = fXOff + -6.96, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [89] = { pos = {x = fXOff + -10.44, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false },
    }

    if Global.call('getStateFishermen') == true then
        --fish tiles
        TileInfo[12].vFishRot = m_BOrientation['NE']
        TileInfo[23].vFishRot = m_BOrientation['NE']
        TileInfo[45].vFishRot = m_BOrientation['NE']
        TileInfo[31].vFishRot = m_BOrientation['SW']
        TileInfo[52].vFishRot = m_BOrientation['SW']
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = true, iNumChits = 0 })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the pirate ship
    local vPos = {x=TileInfo[85].pos.x, y=TileInfo[85].pos.y + 0.5, z=TileInfo[85].pos.z}
    Global.call('spawnPirate', { vPos = vPos, vRot = {0.0,-20.0,0.0} })
    --technically he should start on the number 12 field but we'll just make him swim to the islands
    vPos = {x=TileInfo[87].pos.x, y=TileInfo[87].pos.y + 0.5, z=TileInfo[87].pos.z}
    Global.call('placeRobber', {vPos = vPos})

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[37].pos.x+1.89})
    end
    return true
end --[[ Seafarers - Scenario 3 - 4 players ]]--

--[[ Seafarers - Scenario 3 - 5-6 players ]]--
function loadSFScenario3_5_6P()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['S3'], vMapScale = {34.0, 2.5, 24.0}, bExtension = true })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 1.5
    local TileInfo = {
        [1] = { pos = {x = fXOff + -12.18, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 10, iGroup = 1 },
        [2] = { pos = {x = fXOff + -8.7, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = false },
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'desert', bRandHex = true, iGroup = 3, bFlipped = true },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'mountain', bRandHex = true, iNumToken = 2, iGroup = 3, bFlipped = true },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = false },
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 9, iGroup = 2 },
        [7] = { pos = {x = fXOff + 8.7, y = 0.97, z = 9.03}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 2, iGroup = 2 },
        [9] = { pos = {x = fXOff + -13.92, y = 0.97, z = 6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 6, iGroup = 1 },
        [10] = { pos = {x = fXOff + -10.44, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'mountain', bRandHex = true, iNumToken = 2, iGroup = 3, bFlipped = true },
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'mountain', bRandHex = true, iNumToken = 3, iGroup = 3, bFlipped = true },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'hills', bRandHex = true, iNumToken = 3, iGroup = 3, bFlipped = true },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [15] = { pos = {x = fXOff + 6.96, y = 0.97, z = 6.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 5, iGroup = 2 },
        [16] = { pos = {x = fXOff + 10.44, y = 0.97, z = 6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 12, iGroup = 2 },
        [18] = { pos = {x = fXOff + -15.66, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 12, iGroup = 1 },
        [19] = { pos = {x = fXOff + -12.18, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 4, iGroup = 1 },
        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W'] },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 4, iGroup = 3, bFlipped = true },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = true, iNumToken = 5, iGroup = 3, bFlipped = true },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = true, iNumToken = 5, iGroup = 3, bFlipped = true },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [25] = { pos = {x = fXOff + 8.7, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 4, iGroup = 2 },
        [26] = { pos = {x = fXOff + 12.18, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 8, iGroup = 2 },
        [28] = { pos = {x = fXOff + -17.4, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'ore', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [29] = { pos = {x = fXOff + -13.92, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 11, iGroup = 1 },
        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 5, iGroup = 1 },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = true, iNumToken = 6, iGroup = 3, bFlipped = true },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'gold', bRandHex = true, iNumToken = 8, iGroup = 3, bFlipped = true },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 6, iGroup = 2 },
        [36] = { pos = {x = fXOff + 10.44, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 3, iGroup = 2 },
        [37] = { pos = {x = fXOff + 13.92, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'bricks', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [39] = { pos = {x = fXOff + -15.66, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 6, iGroup = 1 },
        [40] = { pos = {x = fXOff + -12.18, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 3, iGroup = 1 },
        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'gold', bRandHex = true, iNumToken = 9, iGroup = 3, bFlipped = true },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'gold', bRandHex = true, iNumToken = 10, iGroup = 3, bFlipped = true },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = true, iNumToken = 11, iGroup = 3, bFlipped = true },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [46] = { pos = {x = fXOff + 8.7, y = 0.97, z = -3.01}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 9, iGroup = 2 },
        [47] = { pos = {x = fXOff + 12.18, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 4, iGroup = 2 },
        [49] = { pos = {x = fXOff + -13.92, y = 0.97, z = -6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 9, iGroup = 1 },
        [50] = { pos = {x = fXOff + -10.44, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 8, iGroup = 1 },
        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'forest', bRandHex = true, iNumToken = 11, iGroup = 3, bFlipped = true },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = true, iGroup = 3, bFlipped = true },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = true, iGroup = 3, bFlipped = true },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [56] = { pos = {x = fXOff + 10.44, y = 0.97, z = -6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 10, iGroup = 2 },
        [58] = { pos = {x = fXOff + -12.18, y = 0.97, z = -9.03}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 11, iGroup = 1 },
        [59] = { pos = {x = fXOff + -8.7, y = 0.97, z = -9.03}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 10, iGroup = 1 },
        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'hills', bRandHex = true, iNumToken = 12, iGroup = 3, bFlipped = true },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = true, iGroup = 3, bFlipped = true },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false },
        [64] = { pos = {x = fXOff + 8.7, y = 0.97, z = -9.03}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 8, iGroup = 2 },
        --Outside border tiles:
        [8] = { pos = {x = fXOff + 12.18, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [17] = { pos = {x = fXOff + 13.92, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [27] = { pos = {x = fXOff + 15.66, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [38] = { pos = {x = fXOff + 17.4, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['W'], bRandHex = false },
        [48] = { pos = {x = fXOff + 15.66, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [57] = { pos = {x = fXOff + 13.92, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false, sHarborType = 'grain', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [65] = { pos = {x = fXOff + 12.18, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [66] = { pos = {x = fXOff + -13.92, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false },
        [67] = { pos = {x = fXOff + -10.44, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [68] = { pos = {x = fXOff + -6.96, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [69] = { pos = {x = fXOff + -3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [70] = { pos = {x = fXOff + 0.0, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [71] = { pos = {x = fXOff + 3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [72] = { pos = {x = fXOff + 6.96, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false, sHarborType = 'lumber', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [73] = { pos = {x = fXOff + 10.44, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false },
        [83] = { pos = {x = fXOff + 10.44, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false },
        [84] = { pos = {x = fXOff + 6.96, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [85] = { pos = {x = fXOff + 3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [86] = { pos = {x = fXOff + 0.0, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [87] = { pos = {x = fXOff + -3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [88] = { pos = {x = fXOff + -6.96, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [89] = { pos = {x = fXOff + -10.44, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [90] = { pos = {x = fXOff + -13.92, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false },
        [91] = { pos = {x = fXOff + -15.66, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [92] = { pos = {x = fXOff + -17.4, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [93] = { pos = {x = fXOff + -19.14, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [94] = { pos = {x = fXOff + -20.88, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['E'], bRandHex = false },
        [95] = { pos = {x = fXOff + -19.14, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [96] = { pos = {x = fXOff + -17.4, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [97] = { pos = {x = fXOff + -15.66, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE'] },
    }

    if Global.call('getStateFishermen') == true then
        --fish tiles
        TileInfo[8].vFishRot = m_BOrientation['SW']
        TileInfo[96].vFishRot = m_BOrientation['SE']
        TileInfo[91].vFishRot = m_BOrientation['NE']
        TileInfo[89].vFishRot = m_BOrientation['N']
        TileInfo[65].vFishRot = m_BOrientation['NW']
        TileInfo[14].vFishRot = m_BOrientation['NE']
        TileInfo[41].vFishRot = m_BOrientation['SW']
        TileInfo[45].vFishRot = m_BOrientation['NE']
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = true, iNumChits = 0 })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the pirate ship
    local vPos = {x=TileInfo[86].pos.x, y=TileInfo[86].pos.y + 0.5, z=TileInfo[86].pos.z}
    Global.call('spawnPirate', {vPos = vPos, vRot = {0.0,-20.0,0.0}})
    --technically he should start on the number 12 field but we'll just make him swim to the islands
    vPos = {x=TileInfo[88].pos.x, y=TileInfo[88].pos.y + 0.5, z=TileInfo[88].pos.z}
    Global.call('placeRobber', {vPos = vPos})

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[38].pos.x+1.89})
    end
    return true
end --[[ Seafarers - Scenario 3 - 5-6 players ]]--

--[[ Seafarers - Scenario 4 - 3 players ]]--
function loadSFScenario4_3P()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['S4'], vMapScale = {25.0, 2.5, 24.0} })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 0.0
    local TileInfo = {
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'gold', bRandHex = bRandom, iNumToken = 4, iGroup = 2 },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'desert', bRandHex = false },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = false, sHarborType = 'lumber', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 8, iGroup = 2 },
        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 3, iGroup = 2 },
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'desert', bRandHex = false, bRobberPos = true },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 4, iGroup = 1 },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [15] = { pos = {x = fXOff + 6.96, y = 0.97, z = 6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 12, iGroup = 2 },
        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 6, iGroup = 2 },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'desert', bRandHex = bRandom },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 5, iGroup = 1 },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 6, iGroup = 1 },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [25] = { pos = {x = fXOff + 8.7, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'grain', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SE'] },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 3, iGroup = 1 },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 10, iGroup = 1 },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'gold', bRandHex = bRandom, iNumToken = 5, iGroup = 2 },
        [36] = { pos = {x = fXOff + 10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 11, iGroup = 1 },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 6, iGroup = 1 },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 2, iGroup = 1 },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 9, iGroup = 1 },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [46] = { pos = {x = fXOff + 8.7, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 10, iGroup = 1 },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 9, iGroup = 1 },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 8, iGroup = 1 },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 9, iGroup = 2 },
        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 8, iGroup = 1 },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 4, iGroup = 1 },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W'] },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 5, iGroup = 2 },
        --Outside border tiles:
        [2] = { pos = {x = fXOff + -8.7, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [7] = { pos = {x = fXOff + 8.7, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [10] = { pos = {x = fXOff + -10.44, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [16] = { pos = {x = fXOff + 10.44, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [19] = { pos = {x = fXOff + -12.18, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [26] = { pos = {x = fXOff + 12.18, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [29] = { pos = {x = fXOff + -13.92, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['E'], bRandHex = false },
        [37] = { pos = {x = fXOff + 13.92, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['W'], bRandHex = false },
        [40] = { pos = {x = fXOff + -12.18, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [47] = { pos = {x = fXOff + 12.18, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [50] = { pos = {x = fXOff + -10.44, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [56] = { pos = {x = fXOff + 10.44, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [59] = { pos = {x = fXOff + -8.7, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'ore', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [64] = { pos = {x = fXOff + 8.7, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [68] = { pos = {x = fXOff + -6.96, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false },
        [69] = { pos = {x = fXOff + -3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [70] = { pos = {x = fXOff + 0.0, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [71] = { pos = {x = fXOff + 3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [72] = { pos = {x = fXOff + 6.96, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false },
        [84] = { pos = {x = fXOff + 6.96, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false },
        [85] = { pos = {x = fXOff + 3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [86] = { pos = {x = fXOff + 0.0, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [87] = { pos = {x = fXOff + -3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false, sHarborType = 'bricks', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [88] = { pos = {x = fXOff + -6.96, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false },
    }

    if Global.call('getStateFishermen') == true then
        TileInfo[43].sHexType = 'lake'  TileInfo[43].iNumToken = nil
        TileInfo[33].sHexType = 'fields'

        TileInfo[14].vFishRot = m_BOrientation['SW']
        --variable fish tiles (depending on placement of randomized land tiles)
        TileInfo[69].vFishRot = m_BOrientation['S']     TileInfo[69].bVarFish = true
        TileInfo[10].vFishRot = m_BOrientation['SE']    TileInfo[10].bVarFish = true
        TileInfo[2].vFishRot = m_BOrientation['SE']     TileInfo[2].bVarFish = true
        TileInfo[7].vFishRot = m_BOrientation['SW']     TileInfo[7].bVarFish = true
        TileInfo[16].vFishRot = m_BOrientation['SW']    TileInfo[16].bVarFish = true
        TileInfo[36].vFishRot = m_BOrientation['SW']    TileInfo[36].bVarFish = true
        TileInfo[56].vFishRot = m_BOrientation['NW']    TileInfo[56].bVarFish = true
        TileInfo[64].vFishRot = m_BOrientation['NW']    TileInfo[64].bVarFish = true
    end

    if Global.call('getStateRivers') == true then
        TileInfo[43].sHexType = 'river_mountain'        TileInfo[43].bRandHex = false    TileInfo[43].bRandNum = bRandom     TileInfo[43].vRot = {0.0,210.0,0.0}
        TileInfo[32].sHexType = 'river_hills'           TileInfo[32].bRandHex = false    TileInfo[32].bRandNum = bRandom     TileInfo[32].vRot = {0.0,210.0,0.0}
        TileInfo[21].sHexType = 'river_swamp_r'         TileInfo[21].bRandHex = false    TileInfo[21].vRot = {0.0,210.0,0.0}

        TileInfo[22].sHexType = 'fields'

        --revert fishermen changes for the lake
        TileInfo[43].iNumToken = 2
        TileInfo[33].sHexType = 'forest'
    end

    if Global.call('getStateCaravans') == true then
        TileInfo[43].sHexType = 'oasis'     TileInfo[43].bRandHex = false   TileInfo[43].iNumToken = nil
        TileInfo[15].iNumToken = 2        TileInfo[15].iNumTokenSec = 12
        TileInfo[13].sHexType = 'fields'
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = true, iNumChits = 4, sCatanChitDesc = m_ScenarioDef['S4'].sCatanChitDesc })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the pirate ship
    local vPos = {x=TileInfo[69].pos.x, y=TileInfo[69].pos.y + 0.5, z=TileInfo[69].pos.z}
    Global.call('spawnPirate', { vPos = vPos, vRot = {0.0,20.0,0.0} })

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[37].pos.x+1.89})
    end
    return true
end --[[ Seafarers - Scenario 4 - 3 players ]]--

--[[ Seafarers - Scenario 4 - 4 players ]]--
function loadSFScenario4_4P()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['S4'], vMapScale = {28.0, 2.5, 24.0} })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 1.5
    local TileInfo = {
        [2] = { pos = {x = fXOff + -8.7, y = 0.97, z = 9.03}, sHexType = 'gold', bRandHex = bRandom, iNumToken = 10, iGroup = 2 },
        [3] = { pos = {x = fXOff + -5.22, y = 0.97, z = 9.03}, sHexType = 'desert', bRandHex = false },
        [4] = { pos = {x = fXOff + -1.74, y = 0.97, z = 9.03}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 5, iGroup = 1 },
        [5] = { pos = {x = fXOff + 1.74, y = 0.97, z = 9.03}, sHexType = 'ocean', bRandHex = false, sHarborType = 'bricks', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W'] },
        [6] = { pos = {x = fXOff + 5.22, y = 0.97, z = 9.03}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 9, iGroup = 2 },
        [10] = { pos = {x = fXOff + -10.44, y = 0.97, z = 6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 11, iGroup = 2 },
        [11] = { pos = {x = fXOff + -6.96, y = 0.97, z = 6.02}, sHexType = 'desert', bRandHex = false, bRobberPos = true },
        [12] = { pos = {x = fXOff + -3.48, y = 0.97, z = 6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 3, iGroup = 1 },
        [13] = { pos = {x = fXOff + 0.0, y = 0.97, z = 6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 6, iGroup = 1 },
        [14] = { pos = {x = fXOff + 3.48, y = 0.97, z = 6.02}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['SW'] },
        [15] = { pos = {x = fXOff + 6.96, y = 0.97, z = 6.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 4, iGroup = 2 },
        [19] = { pos = {x = fXOff + -12.18, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 8, iGroup = 2 },
        [20] = { pos = {x = fXOff + -8.7, y = 0.97, z = 3.01}, sHexType = 'desert', bRandHex = false },
        [21] = { pos = {x = fXOff + -5.22, y = 0.97, z = 3.01}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 8, iGroup = 1 },
        [22] = { pos = {x = fXOff + -1.74, y = 0.97, z = 3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 10, iGroup = 1 },
        [23] = { pos = {x = fXOff + 1.74, y = 0.97, z = 3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 4, iGroup = 1 },
        [24] = { pos = {x = fXOff + 5.22, y = 0.97, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [25] = { pos = {x = fXOff + 8.7, y = 0.97, z = 3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 2, iGroup = 2 },
        [29] = { pos = {x = fXOff + -13.92, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [30] = { pos = {x = fXOff + -10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'wool', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [31] = { pos = {x = fXOff + -6.96, y = 0.97, z = 0.0}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 10, iGroup = 1 },
        [32] = { pos = {x = fXOff + -3.48, y = 0.97, z = 0.0}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 11, iGroup = 1 },
        [33] = { pos = {x = fXOff + 0.0, y = 0.97, z = 0.0}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 9, iGroup = 1 },
        [34] = { pos = {x = fXOff + 3.48, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [35] = { pos = {x = fXOff + 6.96, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [36] = { pos = {x = fXOff + 10.44, y = 0.97, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [40] = { pos = {x = fXOff + -12.18, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 12, iGroup = 1 },
        [41] = { pos = {x = fXOff + -8.7, y = 0.97, z = -3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 6, iGroup = 1 },
        [42] = { pos = {x = fXOff + -5.22, y = 0.97, z = -3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 5, iGroup = 1 },
        [43] = { pos = {x = fXOff + -1.74, y = 0.97, z = -3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 8, iGroup = 1 },
        [44] = { pos = {x = fXOff + 1.74, y = 0.97, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [45] = { pos = {x = fXOff + 5.22, y = 0.97, z = -3.01}, sHexType = 'gold', bRandHex = bRandom, iNumToken = 5, iGroup = 2 },
        [46] = { pos = {x = fXOff + 8.7, y = 0.97, z = -3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 3, iGroup = 2 },
        [50] = { pos = {x = fXOff + -10.44, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 3, iGroup = 1 },
        [51] = { pos = {x = fXOff + -6.96, y = 0.97, z = -6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 11, iGroup = 1 },
        [52] = { pos = {x = fXOff + -3.48, y = 0.97, z = -6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 4, iGroup = 1 },
        [53] = { pos = {x = fXOff + 0.0, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [54] = { pos = {x = fXOff + 3.48, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = false },
        [55] = { pos = {x = fXOff + 6.96, y = 0.97, z = -6.02}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [59] = { pos = {x = fXOff + -8.7, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false, sHarborType = 'ore', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NW'] },
        [60] = { pos = {x = fXOff + -5.22, y = 0.97, z = -9.03}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 9, iGroup = 1 },
        [61] = { pos = {x = fXOff + -1.74, y = 0.97, z = -9.03}, sHexType = 'ocean', bRandHex = false, sHarborType = 'lumber', bRandHarbor = bRandom, vHarborRot = m_HOrientation['W'] },
        [62] = { pos = {x = fXOff + 1.74, y = 0.97, z = -9.03}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 6, iGroup = 2 },
        [63] = { pos = {x = fXOff + 5.22, y = 0.97, z = -9.03}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 12, iGroup = 2 },
        --Outside border tiles:
        [1] = { pos = {x = fXOff + -12.18, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [7] = { pos = {x = fXOff + 8.7, y = 0.97, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [9] = { pos = {x = fXOff + -13.92, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [16] = { pos = {x = fXOff + 10.44, y = 0.97, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [18] = { pos = {x = fXOff + -15.66, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [26] = { pos = {x = fXOff + 12.18, y = 0.97, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [28] = { pos = {x = fXOff + -17.4, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['E'], bRandHex = false },
        [37] = { pos = {x = fXOff + 13.92, y = 0.97, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['W'], bRandHex = false },
        [39] = { pos = {x = fXOff + -15.66, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [47] = { pos = {x = fXOff + 12.18, y = 0.97, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [49] = { pos = {x = fXOff + -13.92, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'grain', bRandHarbor = bRandom, vHarborRot = m_HOrientation['E'] },
        [56] = { pos = {x = fXOff + 10.44, y = 0.97, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [58] = { pos = {x = fXOff + -12.18, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [64] = { pos = {x = fXOff + 8.7, y = 0.97, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [67] = { pos = {x = fXOff + -10.44, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false },
        [68] = { pos = {x = fXOff + -6.96, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [69] = { pos = {x = fXOff + -3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [70] = { pos = {x = fXOff + 0.0, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [71] = { pos = {x = fXOff + 3.48, y = 0.97, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [72] = { pos = {x = fXOff + 6.96, y = 0.97, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false },
        [84] = { pos = {x = fXOff + 6.96, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false },
        [85] = { pos = {x = fXOff + 3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [86] = { pos = {x = fXOff + 0.0, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [87] = { pos = {x = fXOff + -3.48, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [88] = { pos = {x = fXOff + -6.96, y = 0.97, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false, sHarborType = 'generic', bRandHarbor = bRandom, vHarborRot = m_HOrientation['NE'] },
        [89] = { pos = {x = fXOff + -10.44, y = 0.97, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false },
    }

    if Global.call('getStateFishermen') == true then
        TileInfo[51].sHexType = 'fields'
        TileInfo[51].iNumToken = 5
        TileInfo[63].iNumToken = 11
        TileInfo[42].sHexType = 'lake'  TileInfo[42].iNumToken = nil

        TileInfo[44].vFishRot = m_BOrientation['NW']
        TileInfo[69].vFishRot = m_BOrientation['S']     TileInfo[69].bVarFish = true
        --variable fish tiles (depending on placement of randomized land tiles)
        TileInfo[9].vFishRot = m_BOrientation['SE']     TileInfo[9].bVarFish = true
        TileInfo[1].vFishRot = m_BOrientation['SE']     TileInfo[1].bVarFish = true
        TileInfo[68].vFishRot = m_BOrientation['S']     TileInfo[68].bVarFish = true
        TileInfo[7].vFishRot = m_BOrientation['SW']     TileInfo[7].bVarFish = true
        TileInfo[16].vFishRot = m_BOrientation['SW']    TileInfo[16].bVarFish = true
        TileInfo[36].vFishRot = m_BOrientation['NW']    TileInfo[36].bVarFish = true
        TileInfo[56].vFishRot = m_BOrientation['NW']    TileInfo[56].bVarFish = true
        TileInfo[64].vFishRot = m_BOrientation['NW']    TileInfo[64].bVarFish = true
        TileInfo[85].vFishRot = m_BOrientation['N']     TileInfo[85].bVarFish = true
    end

    if Global.call('getStateRivers') == true then
        TileInfo[33].sHexType = 'river_mountain'        TileInfo[33].bRandHex = false    TileInfo[33].bRandNum = bRandom     TileInfo[33].vRot = {0.0,210.0,0.0}
        TileInfo[22].sHexType = 'river_hills'           TileInfo[22].bRandHex = false    TileInfo[22].bRandNum = bRandom     TileInfo[22].vRot = {0.0,210.0,0.0}
        TileInfo[12].sHexType = 'river_pasture'         TileInfo[12].bRandHex = false    TileInfo[12].bRandNum = bRandom     TileInfo[12].vRot = {0.0,210.0,0.0}
        TileInfo[3].sHexType = 'river_swamp_l'          TileInfo[3].bRandHex = false     TileInfo[3].vRot = {0.0,210.0,0.0}

        TileInfo[42].sHexType = 'river_mountain'        TileInfo[42].bRandHex = false    TileInfo[42].bRandNum = bRandom     TileInfo[42].vRot = {0.0,210.0,0.0}
        TileInfo[31].sHexType = 'river_hills'           TileInfo[31].bRandHex = false    TileInfo[31].bRandNum = bRandom     TileInfo[31].vRot = {0.0,210.0,0.0}
        TileInfo[20].sHexType = 'river_swamp_r'         TileInfo[20].bRandHex = false    TileInfo[20].vRot = {0.0,210.0,0.0}

        TileInfo[52].sHexType = 'fields'
        TileInfo[21].sHexType = 'fields'
        TileInfo[41].sHexType = 'forest'

        --in case fishermen is selected reverse the number changes done for the lake:
        TileInfo[63].iNumToken = 12
        TileInfo[51].iNumToken = 11
        TileInfo[42].iNumToken = 5
    end

    if Global.call('getStateCaravans') == true then
        TileInfo[25].iNumToken = 5
        TileInfo[42].sHexType = 'oasis'     TileInfo[42].bRandHex = false       TileInfo[42].iNumToken = nil
        TileInfo[40].iNumToken = 2          TileInfo[40].iNumTokenSec = 12
        TileInfo[50].sHexType = 'fields'
        TileInfo[51].iNumToken = 11
        TileInfo[63].iNumToken = 12
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = true, iNumChits = 4, sCatanChitDesc = m_ScenarioDef['S4'].sCatanChitDesc })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the pirate ship
    local vPos = {x=TileInfo[68].pos.x, y=TileInfo[68].pos.y + 0.5, z=TileInfo[68].pos.z}
    Global.call('spawnPirate', { vPos = vPos, vRot = {0.0,20.0,0.0} })

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[37].pos.x+1.89})
    end
    return true
end --[[ Seafarers - Scenario 4 - 4 players ]]--

--[[ Seafarers - Scenario 4 - 5-6 players ]]--
function loadSFScenario4_5_6P()
    local bRandom = Global.call('getStateRandomize')
    Global.call('onMapLoad', { Scenario = m_ScenarioDef['S4'], vMapScale = {38.0, 2.5, 24.0}, bExtension = true })
    startLuaCoroutine(Global, 'setupDecks')

    local fXOff = 0.0
    local TileInfo = {
        [1] = { pos = {x = fXOff + -12.18, y = 0.965, z = 9.03}, sHexType = 'gold', bRandHex = bRandom, iNumToken = 4, iGroup = 2 },
        [2] = { pos = {x = fXOff + -8.7, y = 0.965, z = 9.03}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 6, iGroup = 2 },
        [3] = { pos = {x = fXOff + -5.22, y = 0.965, z = 9.03}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 11, iGroup = 2 },
        [4] = { pos = {x = fXOff + -1.74, y = 0.965, z = 9.03}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [5] = { pos = {x = fXOff + 1.74, y = 0.965, z = 9.03}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 12, iGroup = 2 },
        [6] = { pos = {x = fXOff + 5.22, y = 0.965, z = 9.03}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 5, iGroup = 2 },
        [7] = { pos = {x = fXOff + 8.7, y = 0.965, z = 9.03}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 3, iGroup = 2 },
        [8] = { pos = {x = fXOff + 12.18, y = 0.965, z = 9.03}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 6, iGroup = 2 },
        [9] = { pos = {x = fXOff + -13.92, y = 0.965, z = 6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 5, iGroup = 2 },
        [10] = { pos = {x = fXOff + -10.44, y = 0.965, z = 6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 2, iGroup = 2 },
        [11] = { pos = {x = fXOff + -6.96, y = 0.965, z = 6.02}, sHexType = 'desert', bRandHex = false },
        [12] = { pos = {x = fXOff + -3.48, y = 0.965, z = 6.02}, sHexType = 'desert', bRandHex = false, bRobberPos = true },
        [13] = { pos = {x = fXOff + 0.0, y = 0.965, z = 6.02}, sHexType = 'desert', bRandHex = false },
        [14] = { pos = {x = fXOff + 3.48, y = 0.965, z = 6.02}, sHexType = 'desert', bRandHex = false },
        [15] = { pos = {x = fXOff + 6.96, y = 0.965, z = 6.02}, sHexType = 'desert', bRandHex = false },
        [16] = { pos = {x = fXOff + 10.44, y = 0.965, z = 6.02}, sHexType = 'ocean', bRandHex = false },
        [17] = { pos = {x = fXOff + 13.92, y = 0.965, z = 6.02}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [18] = { pos = {x = fXOff + -15.66, y = 0.965, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['SE'] },
        [19] = { pos = {x = fXOff + -12.18, y = 0.965, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [20] = { pos = {x = fXOff + -8.7, y = 0.965, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['SE'] },
        [21] = { pos = {x = fXOff + -5.22, y = 0.965, z = 3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 2, iGroup = 1 },
        [22] = { pos = {x = fXOff + -1.74, y = 0.965, z = 3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 8, iGroup = 1 },
        [23] = { pos = {x = fXOff + 1.74, y = 0.965, z = 3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 9, iGroup = 1 },
        [24] = { pos = {x = fXOff + 5.22, y = 0.965, z = 3.01}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 10, iGroup = 1 },
        [25] = { pos = {x = fXOff + 8.7, y = 0.965, z = 3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['W'] },
        [26] = { pos = {x = fXOff + 12.18, y = 0.965, z = 3.01}, sHexType = 'ocean', bRandHex = false },
        [27] = { pos = {x = fXOff + 15.66, y = 0.965, z = 3.01}, sHexType = 'gold', bRandHex = bRandom, iNumToken = 10, iGroup = 2 },
        [28] = { pos = {x = fXOff + -17.4, y = 0.965, z = 0.0}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['SE'] },
        [29] = { pos = {x = fXOff + -13.92, y = 0.965, z = 0.0}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 4, iGroup = 1 },
        [30] = { pos = {x = fXOff + -10.44, y = 0.965, z = 0.0}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 5, iGroup = 1 },
        [31] = { pos = {x = fXOff + -6.96, y = 0.965, z = 0.0}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 10, iGroup = 1 },
        [32] = { pos = {x = fXOff + -3.48, y = 0.965, z = 0.0}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 5, iGroup = 1 },
        [33] = { pos = {x = fXOff + 0.0, y = 0.965, z = 0.0}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 10, iGroup = 1 },
        [34] = { pos = {x = fXOff + 3.48, y = 0.965, z = 0.0}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 4, iGroup = 1 },
        [35] = { pos = {x = fXOff + 6.96, y = 0.965, z = 0.0}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 8, iGroup = 1 },
        [36] = { pos = {x = fXOff + 10.44, y = 0.965, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [37] = { pos = {x = fXOff + 13.92, y = 0.965, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [38] = { pos = {x = fXOff + 17.4, y = 0.965, z = 0.0}, sHexType = 'ocean', bRandHex = false },
        [39] = { pos = {x = fXOff + -15.66, y = 0.965, z = -3.01}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 12, iGroup = 1 },
        [40] = { pos = {x = fXOff + -12.18, y = 0.965, z = -3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 3, iGroup = 1 },
        [41] = { pos = {x = fXOff + -8.7, y = 0.965, z = -3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 12, iGroup = 1 },
        [42] = { pos = {x = fXOff + -5.22, y = 0.965, z = -3.01}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 6, iGroup = 1 },
        [43] = { pos = {x = fXOff + -1.74, y = 0.965, z = -3.01}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 11, iGroup = 1 },
        [44] = { pos = {x = fXOff + 1.74, y = 0.965, z = -3.01}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 3, iGroup = 1 },
        [45] = { pos = {x = fXOff + 5.22, y = 0.965, z = -3.01}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 9, iGroup = 1 },
        [46] = { pos = {x = fXOff + 8.7, y = 0.965, z = -3.01}, sHexType = 'ocean', bRandHex = false, sHarborType = 'wool', bRandHarbor = true, vHarborRot = m_HOrientation['NW'] },
        [47] = { pos = {x = fXOff + 12.18, y = 0.965, z = -3.01}, sHexType = 'ocean', bRandHex = false },
        [48] = { pos = {x = fXOff + 15.66, y = 0.965, z = -3.01}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 8, iGroup = 2 },
        [49] = { pos = {x = fXOff + -13.92, y = 0.965, z = -6.02}, sHexType = 'hills', bRandHex = bRandom, iNumToken = 9, iGroup = 1 },
        [50] = { pos = {x = fXOff + -10.44, y = 0.965, z = -6.02}, sHexType = 'mountain', bRandHex = bRandom, iNumToken = 11, iGroup = 1 },
        [51] = { pos = {x = fXOff + -6.96, y = 0.965, z = -6.02}, sHexType = 'ocean', bRandHex = false, sHarborType = 'grain', bRandHarbor = true, vHarborRot = m_HOrientation['NW'] },
        [52] = { pos = {x = fXOff + -3.48, y = 0.965, z = -6.02}, sHexType = 'ocean', bRandHex = false, sHarborType = 'ore', bRandHarbor = true, vHarborRot = m_HOrientation['NE'] },
        [53] = { pos = {x = fXOff + 0.0, y = 0.965, z = -6.02}, sHexType = 'ocean', bRandHex = false },
        [54] = { pos = {x = fXOff + 3.48, y = 0.965, z = -6.02}, sHexType = 'ocean', bRandHex = false, sHarborType = 'generic', bRandHarbor = true, vHarborRot = m_HOrientation['NE'] },
        [55] = { pos = {x = fXOff + 6.96, y = 0.965, z = -6.02}, sHexType = 'ocean', bRandHex = false },
        [56] = { pos = {x = fXOff + 10.44, y = 0.965, z = -6.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 11, iGroup = 2 },
        [57] = { pos = {x = fXOff + 13.92, y = 0.965, z = -6.02}, sHexType = 'forest', bRandHex = bRandom, iNumToken = 3, iGroup = 2 },
        [58] = { pos = {x = fXOff + -12.18, y = 0.965, z = -9.02}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 6, iGroup = 1 },
        [59] = { pos = {x = fXOff + -8.7, y = 0.965, z = -9.02}, sHexType = 'ocean', bRandHex = false, sHarborType = 'wool', bRandHarbor = true, vHarborRot = m_HOrientation['NW'] },
        [60] = { pos = {x = fXOff + -5.22, y = 0.965, z = -9.03}, sHexType = 'pasture', bRandHex = bRandom, iNumToken = 8, iGroup = 2 },
        [61] = { pos = {x = fXOff + -1.74, y = 0.965, z = -9.03}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 2, iGroup = 2 },
        [62] = { pos = {x = fXOff + 1.74, y = 0.965, z = -9.03}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [63] = { pos = {x = fXOff + 5.22, y = 0.965, z = -9.03}, sHexType = 'gold', bRandHex = bRandom, iNumToken = 4, iGroup = 2 },
        [64] = { pos = {x = fXOff + 8.7, y = 0.965, z = -9.02}, sHexType = 'ocean', bRandHex = bRandom, iGroup = 2 },
        [65] = { pos = {x = fXOff + 12.18, y = 0.965, z = -9.02}, sHexType = 'fields', bRandHex = bRandom, iNumToken = 9, iGroup = 2 },
        --Outside border tiles:
        [66] = { pos = {x = fXOff + -13.92, y = 0.965, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SE'], bRandHex = false },
        [67] = { pos = {x = fXOff + -10.44, y = 0.965, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [68] = { pos = {x = fXOff + -6.96, y = 0.965, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [69] = { pos = {x = fXOff + -3.48, y = 0.965, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [70] = { pos = {x = fXOff + 0.0, y = 0.965, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [71] = { pos = {x = fXOff + 3.48, y = 0.965, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [72] = { pos = {x = fXOff + 6.96, y = 0.965, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [73] = { pos = {x = fXOff + 10.44, y = 0.965, z = 12.04}, sHexType = 'border', vRot = m_BOrientation['S'], bRandHex = false },
        [74] = { pos = {x = fXOff + 13.92, y = 0.965, z = 12.04}, sHexType = 'corner', vRot = m_COrientation['SW'], bRandHex = false },
        [75] = { pos = {x = fXOff + 15.66, y = 0.965, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [76] = { pos = {x = fXOff + 17.4, y = 0.965, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [77] = { pos = {x = fXOff + 19.14, y = 0.965, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SW'], bRandHex = false },
        [78] = { pos = {x = fXOff + 20.88, y = 0.965, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['W'], bRandHex = false },
        [79] = { pos = {x = fXOff + 19.14, y = 0.965, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [80] = { pos = {x = fXOff + 17.4, y = 0.965, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [81] = { pos = {x = fXOff + 15.66, y = 0.965, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NW'], bRandHex = false },
        [82] = { pos = {x = fXOff + 13.92, y = 0.965, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NW'], bRandHex = false },
        [83] = { pos = {x = fXOff + 10.44, y = 0.965, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [84] = { pos = {x = fXOff + 6.96, y = 0.965, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [85] = { pos = {x = fXOff + 3.48, y = 0.965, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [86] = { pos = {x = fXOff + 0.0, y = 0.965, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [87] = { pos = {x = fXOff + -3.48, y = 0.965, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [88] = { pos = {x = fXOff + -6.96, y = 0.965, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [89] = { pos = {x = fXOff + -10.44, y = 0.965, z = -12.04}, sHexType = 'border', vRot = m_BOrientation['N'], bRandHex = false },
        [90] = { pos = {x = fXOff + -13.92, y = 0.965, z = -12.04}, sHexType = 'corner', vRot = m_COrientation['NE'], bRandHex = false, sHarborType = 'bricks', bRandHarbor = true, vHarborRot = m_HOrientation['NE'] },
        [91] = { pos = {x = fXOff + -15.66, y = 0.965, z = -9.03}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [92] = { pos = {x = fXOff + -17.4, y = 0.965, z = -6.02}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false, sHarborType = 'lumber', bRandHarbor = true, vHarborRot = m_HOrientation['E'] },
        [93] = { pos = {x = fXOff + -19.14, y = 0.965, z = -3.01}, sHexType = 'border', vRot = m_BOrientation['NE'], bRandHex = false },
        [94] = { pos = {x = fXOff + -20.88, y = 0.965, z = 0.0}, sHexType = 'corner', vRot = m_BOrientation['E'], bRandHex = false },
        [95] = { pos = {x = fXOff + -19.14, y = 0.965, z = 3.01}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [96] = { pos = {x = fXOff + -17.4, y = 0.965, z = 6.02}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
        [97] = { pos = {x = fXOff + -15.66, y = 0.965, z = 9.03}, sHexType = 'border', vRot = m_BOrientation['SE'], bRandHex = false },
    }

    if Global.call('getStateFishermen') == true then
        TileInfo[21].sHexType = 'pasture'    TileInfo[21].iNumToken = 10
        TileInfo[33].sHexType = 'lake'       TileInfo[33].iNumToken = nil

        TileInfo[91].vFishRot = m_BOrientation['NE']
        --variable fish tiles (depending on placement of randomized land tiles)
        TileInfo[97].vFishRot = m_BOrientation['SE']     TileInfo[97].bVarFish = true
        TileInfo[67].vFishRot = m_BOrientation['S']     TileInfo[67].bVarFish = true
        TileInfo[68].vFishRot = m_BOrientation['S']     TileInfo[68].bVarFish = true
        TileInfo[69].vFishRot = m_BOrientation['S']     TileInfo[69].bVarFish = true
        TileInfo[4].vFishRot = m_BOrientation['S']     TileInfo[4].bVarFish = true
        TileInfo[5].vFishRot = m_BOrientation['S']     TileInfo[5].bVarFish = true
        TileInfo[70].vFishRot = m_BOrientation['S']     TileInfo[70].bVarFish = true
        TileInfo[71].vFishRot = m_BOrientation['S']    TileInfo[71].bVarFish = true
        TileInfo[72].vFishRot = m_BOrientation['S']    TileInfo[72].bVarFish = true
        TileInfo[73].vFishRot = m_BOrientation['S']    TileInfo[73].bVarFish = true
        TileInfo[75].vFishRot = m_BOrientation['SW']    TileInfo[75].bVarFish = true
        TileInfo[76].vFishRot = m_BOrientation['SW']    TileInfo[76].bVarFish = true
        TileInfo[38].vFishRot = m_BOrientation['NW']    TileInfo[38].bVarFish = true
        TileInfo[65].vFishRot = m_BOrientation['NW']     TileInfo[65].bVarFish = true
        TileInfo[80].vFishRot = m_BOrientation['NW']    TileInfo[80].bVarFish = true
        TileInfo[81].vFishRot = m_BOrientation['NW']    TileInfo[81].bVarFish = true
        TileInfo[83].vFishRot = m_BOrientation['N']    TileInfo[83].bVarFish = true
        TileInfo[84].vFishRot = m_BOrientation['N']    TileInfo[84].bVarFish = true
        TileInfo[85].vFishRot = m_BOrientation['N']    TileInfo[85].bVarFish = true
        TileInfo[86].vFishRot = m_BOrientation['N']    TileInfo[86].bVarFish = true
        TileInfo[87].vFishRot = m_BOrientation['N']    TileInfo[87].bVarFish = true
    end

    if Global.call('getStateRivers') == true then
        TileInfo[29].sHexType = 'river_mountain'        TileInfo[29].bRandHex = false    TileInfo[29].bRandNum = bRandom     TileInfo[29].vRot = {0.0,30.0,0.0}
        TileInfo[40].sHexType = 'river_ext_pasture1'    TileInfo[40].bRandHex = false    TileInfo[40].bRandNum = bRandom     TileInfo[40].vRot = {0.0,30.0,0.0}
        TileInfo[50].sHexType = 'river_ext_pasture2'    TileInfo[50].bRandHex = false    TileInfo[50].bRandNum = bRandom     TileInfo[50].vRot = {0.0,30.0,0.0}

        TileInfo[44].sHexType = 'river_mountain'        TileInfo[44].bRandHex = false    TileInfo[44].bRandNum = bRandom     TileInfo[44].vRot = {0.0,270.0,0.0}
        TileInfo[34].sHexType = 'river_hills'           TileInfo[34].bRandHex = false    TileInfo[34].bRandNum = bRandom     TileInfo[34].vRot = {0.0,270.0,0.0}
        TileInfo[24].sHexType = 'river_pasture'         TileInfo[24].bRandHex = false    TileInfo[24].bRandNum = bRandom     TileInfo[24].vRot = {0.0,270.0,0.0}
        TileInfo[15].sHexType = 'river_swamp_l'         TileInfo[15].bRandHex = false    TileInfo[15].vRot = {0.0,270.0,0.0}

        TileInfo[32].sHexType = 'river_mountain'        TileInfo[32].bRandHex = false    TileInfo[32].bRandNum = bRandom     TileInfo[32].vRot = {0.0,270.0,0.0}
        TileInfo[22].sHexType = 'river_hills'           TileInfo[22].bRandHex = false    TileInfo[22].bRandNum = bRandom     TileInfo[22].vRot = {0.0,270.0,0.0}
        TileInfo[13].sHexType = 'river_swamp_r'         TileInfo[13].bRandHex = false    TileInfo[13].vRot = {0.0,270.0,0.0}

        TileInfo[35].sHexType = 'forest'
        TileInfo[23].sHexType = 'fields'
        TileInfo[33].sHexType = 'forest'
        TileInfo[58].sHexType = 'forest'

        TileInfo[4].bRandHex = false --make this ocean tile fix so the small river does not end in a land tile

        --revert fishermen changes for the lake
        TileInfo[21].sHexType = 'fields'    TileInfo[21].iNumToken = 2
        TileInfo[33].iNumToken = 10
    end

    if Global.call('getStateCaravans') == true then
        TileInfo[33].sHexType = 'oasis'     TileInfo[33].bRandHex = false   TileInfo[33].iNumToken = nil
        TileInfo[40].sHexType = 'oasis'     TileInfo[40].bRandHex = false   TileInfo[40].iNumToken = nil

        TileInfo[10].iNumToken = 2  TileInfo[10].iNumTokenSec = 12
        TileInfo[61].iNumToken = 2  TileInfo[61].iNumTokenSec = 12

        TileInfo[5].iNumToken = 10
        TileInfo[39].iNumToken = 3

        --revert changes of Fishermen in case both expansions are selected
        TileInfo[21].sHexType = 'fields'    TileInfo[21].iNumToken = 2
        TileInfo[49].sHexType = 'fields'
    end

    --Put player items (Cities, Settlements, Roads) into their starting position / spawn ships and Catan Chits
    Global.call('setupPlayerItems', { bAddShips = true, iNumChits = 5, sCatanChitDesc = m_ScenarioDef['S4'].sCatanChitDesc })

    --Position/spawn hexes, numbers, harbors
    coroutine.yield(0)
    Global.call('createMap', {PlacemInfo = TileInfo})
    coroutine.yield(0)

    --Spawn the pirate ship
    local vPos = {x=TileInfo[38].pos.x, y=TileInfo[38].pos.y + 0.5, z=TileInfo[38].pos.z}
    Global.call('spawnPirate', {vPos = vPos})

    --Spawn the barbarian tile and the barbarians for the Cities and Knights expansion
    if Global.call('isCKenabled') == true then
        Global.call('spawnBarbarians', {fXPos=TileInfo[78].pos.x+1.89})
    end
    return true
end --[[ Seafarers - Scenario 4 - 5-6 players ]]--

----#include Catan/Scripts/ControlPanel-Page1